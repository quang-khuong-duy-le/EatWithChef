// Generated by CoffeeScript 1.6.2
/*
jQuery Waypoints - v2.0.2
Copyright (c) 2011-2013 Caleb Troughton
Dual licensed under the MIT license and GPL license.
https://github.com/imakewebthings/jquery-waypoints/blob/master/licenses.txt
*/
(function(){var t=[].indexOf||function(t){for(var e=0,n=this.length;e<n;e++){if(e in this&&this[e]===t)return e}return-1},e=[].slice;(function(t,e){if(typeof define==="function"&&define.amd){return define("waypoints",["jquery"],function(n){return e(n,t)})}else{return e(t.jQuery,t)}})(this,function(n,r){var i,o,l,s,f,u,a,c,h,d,p,y,v,w,g,m;i=n(r);c=t.call(r,"ontouchstart")>=0;s={horizontal:{},vertical:{}};f=1;a={};u="waypoints-context-id";p="resize.waypoints";y="scroll.waypoints";v=1;w="waypoints-waypoint-ids";g="waypoint";m="waypoints";o=function(){function t(t){var e=this;this.$element=t;this.element=t[0];this.didResize=false;this.didScroll=false;this.id="context"+f++;this.oldScroll={x:t.scrollLeft(),y:t.scrollTop()};this.waypoints={horizontal:{},vertical:{}};t.data(u,this.id);a[this.id]=this;t.bind(y,function(){var t;if(!(e.didScroll||c)){e.didScroll=true;t=function(){e.doScroll();return e.didScroll=false};return r.setTimeout(t,n[m].settings.scrollThrottle)}});t.bind(p,function(){var t;if(!e.didResize){e.didResize=true;t=function(){n[m]("refresh");return e.didResize=false};return r.setTimeout(t,n[m].settings.resizeThrottle)}})}t.prototype.doScroll=function(){var t,e=this;t={horizontal:{newScroll:this.$element.scrollLeft(),oldScroll:this.oldScroll.x,forward:"right",backward:"left"},vertical:{newScroll:this.$element.scrollTop(),oldScroll:this.oldScroll.y,forward:"down",backward:"up"}};if(c&&(!t.vertical.oldScroll||!t.vertical.newScroll)){n[m]("refresh")}n.each(t,function(t,r){var i,o,l;l=[];o=r.newScroll>r.oldScroll;i=o?r.forward:r.backward;n.each(e.waypoints[t],function(t,e){var n,i;if(r.oldScroll<(n=e.offset)&&n<=r.newScroll){return l.push(e)}else if(r.newScroll<(i=e.offset)&&i<=r.oldScroll){return l.push(e)}});l.sort(function(t,e){return t.offset-e.offset});if(!o){l.reverse()}return n.each(l,function(t,e){if(e.options.continuous||t===l.length-1){return e.trigger([i])}})});return this.oldScroll={x:t.horizontal.newScroll,y:t.vertical.newScroll}};t.prototype.refresh=function(){var t,e,r,i=this;r=n.isWindow(this.element);e=this.$element.offset();this.doScroll();t={horizontal:{contextOffset:r?0:e.left,contextScroll:r?0:this.oldScroll.x,contextDimension:this.$element.width(),oldScroll:this.oldScroll.x,forward:"right",backward:"left",offsetProp:"left"},vertical:{contextOffset:r?0:e.top,contextScroll:r?0:this.oldScroll.y,contextDimension:r?n[m]("viewportHeight"):this.$element.height(),oldScroll:this.oldScroll.y,forward:"down",backward:"up",offsetProp:"top"}};return n.each(t,function(t,e){return n.each(i.waypoints[t],function(t,r){var i,o,l,s,f;i=r.options.offset;l=r.offset;o=n.isWindow(r.element)?0:r.$element.offset()[e.offsetProp];if(n.isFunction(i)){i=i.apply(r.element)}else if(typeof i==="string"){i=parseFloat(i);if(r.options.offset.indexOf("%")>-1){i=Math.ceil(e.contextDimension*i/100)}}r.offset=o-e.contextOffset+e.contextScroll-i;if(r.options.onlyOnScroll&&l!=null||!r.enabled){return}if(l!==null&&l<(s=e.oldScroll)&&s<=r.offset){return r.trigger([e.backward])}else if(l!==null&&l>(f=e.oldScroll)&&f>=r.offset){return r.trigger([e.forward])}else if(l===null&&e.oldScroll>=r.offset){return r.trigger([e.forward])}})})};t.prototype.checkEmpty=function(){if(n.isEmptyObject(this.waypoints.horizontal)&&n.isEmptyObject(this.waypoints.vertical)){this.$element.unbind([p,y].join(" "));return delete a[this.id]}};return t}();l=function(){function t(t,e,r){var i,o;r=n.extend({},n.fn[g].defaults,r);if(r.offset==="bottom-in-view"){r.offset=function(){var t;t=n[m]("viewportHeight");if(!n.isWindow(e.element)){t=e.$element.height()}return t-n(this).outerHeight()}}this.$element=t;this.element=t[0];this.axis=r.horizontal?"horizontal":"vertical";this.callback=r.handler;this.context=e;this.enabled=r.enabled;this.id="waypoints"+v++;this.offset=null;this.options=r;e.waypoints[this.axis][this.id]=this;s[this.axis][this.id]=this;i=(o=t.data(w))!=null?o:[];i.push(this.id);t.data(w,i)}t.prototype.trigger=function(t){if(!this.enabled){return}if(this.callback!=null){this.callback.apply(this.element,t)}if(this.options.triggerOnce){return this.destroy()}};t.prototype.disable=function(){return this.enabled=false};t.prototype.enable=function(){this.context.refresh();return this.enabled=true};t.prototype.destroy=function(){delete s[this.axis][this.id];delete this.context.waypoints[this.axis][this.id];return this.context.checkEmpty()};t.getWaypointsByElement=function(t){var e,r;r=n(t).data(w);if(!r){return[]}e=n.extend({},s.horizontal,s.vertical);return n.map(r,function(t){return e[t]})};return t}();d={init:function(t,e){var r;if(e==null){e={}}if((r=e.handler)==null){e.handler=t}this.each(function(){var t,r,i,s;t=n(this);i=(s=e.context)!=null?s:n.fn[g].defaults.context;if(!n.isWindow(i)){i=t.closest(i)}i=n(i);r=a[i.data(u)];if(!r){r=new o(i)}return new l(t,r,e)});n[m]("refresh");return this},disable:function(){return d._invoke(this,"disable")},enable:function(){return d._invoke(this,"enable")},destroy:function(){return d._invoke(this,"destroy")},prev:function(t,e){return d._traverse.call(this,t,e,function(t,e,n){if(e>0){return t.push(n[e-1])}})},next:function(t,e){return d._traverse.call(this,t,e,function(t,e,n){if(e<n.length-1){return t.push(n[e+1])}})},_traverse:function(t,e,i){var o,l;if(t==null){t="vertical"}if(e==null){e=r}l=h.aggregate(e);o=[];this.each(function(){var e;e=n.inArray(this,l[t]);return i(o,e,l[t])});return this.pushStack(o)},_invoke:function(t,e){t.each(function(){var t;t=l.getWaypointsByElement(this);return n.each(t,function(t,n){n[e]();return true})});return this}};n.fn[g]=function(){var t,r;r=arguments[0],t=2<=arguments.length?e.call(arguments,1):[];if(d[r]){return d[r].apply(this,t)}else if(n.isFunction(r)){return d.init.apply(this,arguments)}else if(n.isPlainObject(r)){return d.init.apply(this,[null,r])}else if(!r){return n.error("jQuery Waypoints needs a callback function or handler option.")}else{return n.error("The "+r+" method does not exist in jQuery Waypoints.")}};n.fn[g].defaults={context:r,continuous:true,enabled:true,horizontal:false,offset:0,triggerOnce:false};h={refresh:function(){return n.each(a,function(t,e){return e.refresh()})},viewportHeight:function(){var t;return(t=r.innerHeight)!=null?t:i.height()},aggregate:function(t){var e,r,i;e=s;if(t){e=(i=a[n(t).data(u)])!=null?i.waypoints:void 0}if(!e){return[]}r={horizontal:[],vertical:[]};n.each(r,function(t,i){n.each(e[t],function(t,e){return i.push(e)});i.sort(function(t,e){return t.offset-e.offset});r[t]=n.map(i,function(t){return t.element});return r[t]=n.unique(r[t])});return r},above:function(t){if(t==null){t=r}return h._filter(t,"vertical",function(t,e){return e.offset<=t.oldScroll.y})},below:function(t){if(t==null){t=r}return h._filter(t,"vertical",function(t,e){return e.offset>t.oldScroll.y})},left:function(t){if(t==null){t=r}return h._filter(t,"horizontal",function(t,e){return e.offset<=t.oldScroll.x})},right:function(t){if(t==null){t=r}return h._filter(t,"horizontal",function(t,e){return e.offset>t.oldScroll.x})},enable:function(){return h._invoke("enable")},disable:function(){return h._invoke("disable")},destroy:function(){return h._invoke("destroy")},extendFn:function(t,e){return d[t]=e},_invoke:function(t){var e;e=n.extend({},s.vertical,s.horizontal);return n.each(e,function(e,n){n[t]();return true})},_filter:function(t,e,r){var i,o;i=a[n(t).data(u)];if(!i){return[]}o=[];n.each(i.waypoints[e],function(t,e){if(r(i,e)){return o.push(e)}});o.sort(function(t,e){return t.offset-e.offset});return n.map(o,function(t){return t.element})}};n[m]=function(){var t,n;n=arguments[0],t=2<=arguments.length?e.call(arguments,1):[];if(h[n]){return h[n].apply(null,t)}else{return h.aggregate.call(null,n)}};n[m].settings={resizeThrottle:100,scrollThrottle:30};return i.load(function(){return n[m]("refresh")})})}).call(this);;
/*! Magnific Popup - v0.8.9 - 2013-06-04
* http://dimsemenov.com/plugins/magnific-popup/
* Copyright (c) 2013 Dmitry Semenov; */
;(function($) {

/*>>core*/
/**
 * 
 * Magnific Popup Core JS file
 * 
 */


/**
 * Private static constants
 */
var CLOSE_EVENT = 'Close',
	AFTER_CLOSE_EVENT = 'AfterClose',
	BEFORE_APPEND_EVENT = 'BeforeAppend',
	MARKUP_PARSE_EVENT = 'MarkupParse',
	OPEN_EVENT = 'Open',
	CHANGE_EVENT = 'Change',
	NS = 'mfp',
	EVENT_NS = '.' + NS,
	READY_CLASS = 'mfp-ready',
	REMOVING_CLASS = 'mfp-removing',
	PREVENT_CLOSE_CLASS = 'mfp-prevent-close';


/**
 * Private vars 
 */
var mfp, // As we have only one instance of MagnificPopup object, we define it locally to not to use 'this'
	MagnificPopup = function(){},
	_isJQ = !!(window.jQuery),
	_prevStatus,
	_window = $(window),
	_body,
	_document,
	_prevContentType,
	_wrapClasses,
	_currPopupType;


/**
 * Private functions
 */
var _mfpOn = function(name, f) {
		mfp.ev.on(NS + name + EVENT_NS, f);
	},
	_getEl = function(className, appendTo, html, raw) {
		var el = document.createElement('div');
		el.className = 'mfp-'+className;
		if(html) {
			el.innerHTML = html;
		}
		if(!raw) {
			el = $(el);
			if(appendTo) {
				el.appendTo(appendTo);
			}
		} else if(appendTo) {
			appendTo.appendChild(el);
		}
		return el;
	},
	_mfpTrigger = function(e, data) {
		mfp.ev.triggerHandler(NS + e, data);

		if(mfp.st.callbacks) {
			// converts "mfpEventName" to "eventName" callback and triggers it if it's present
			e = e.charAt(0).toLowerCase() + e.slice(1);
			if(mfp.st.callbacks[e]) {
				mfp.st.callbacks[e].apply(mfp, $.isArray(data) ? data : [data]);
			}
		}
	},
	_setFocus = function() {
		(mfp.st.focus ? mfp.content.find(mfp.st.focus).eq(0) : mfp.wrap).focus();
	},
	_getCloseBtn = function(type) {
		if(type !== _currPopupType || !mfp.currTemplate.closeBtn) {
			mfp.currTemplate.closeBtn = $( mfp.st.closeMarkup.replace('%title%', mfp.st.tClose ) );
			_currPopupType = type;
		}
		return mfp.currTemplate.closeBtn;
	},
	// Initialize Magnific Popup only when called at least once
	_checkInstance = function() {
		if(!$.magnificPopup.instance) {
			mfp = new MagnificPopup();
			mfp.init();
			$.magnificPopup.instance = mfp;
		}
	},
	// Check to close popup or not
	// "target" is an element that was clicked
	_checkIfClose = function(target) {

		if($(target).hasClass(PREVENT_CLOSE_CLASS)) {
			return;
		}

		var closeOnContent = mfp.st.closeOnContentClick;
		var closeOnBg = mfp.st.closeOnBgClick;

		if(closeOnContent && closeOnBg) {
			return true;
		} else {

			// We close the popup if click is on close button or on preloader. Or if there is no content.
			if(!mfp.content || $(target).hasClass('mfp-close') || (mfp.preloader && target === mfp.preloader[0]) ) {
				return true;
			}

			// if click is outside the content
			if(  (target !== mfp.content[0] && !$.contains(mfp.content[0], target))  ) {
				if(closeOnBg) {
					return true;
				}
			} else if(closeOnContent) {
				return true;
			}

		}
		return false;
	};



/**
 * Public functions
 */
MagnificPopup.prototype = {

	constructor: MagnificPopup,

	/**
	 * Initializes Magnific Popup plugin. 
	 * This function is triggered only once when $.fn.magnificPopup or $.magnificPopup is executed
	 */
	init: function() {
		var appVersion = navigator.appVersion;
		mfp.isIE7 = appVersion.indexOf("MSIE 7.") !== -1; 
		mfp.isIE8 = appVersion.indexOf("MSIE 8.") !== -1;
		mfp.isLowIE = mfp.isIE7 || mfp.isIE8;
		mfp.isAndroid = (/android/gi).test(appVersion);
		mfp.isIOS = (/iphone|ipad|ipod/gi).test(appVersion);
		// We disable fixed positioned lightbox on devices that don't handle it nicely.
		// If you know a better way of detecting this - let me know.
		mfp.probablyMobile = (mfp.isAndroid || mfp.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent) );
		_body = $(document.body);
		_document = $(document);

		mfp.popupsCache = {};
	},

	/**
	 * Opens popup
	 * @param  data [description]
	 */
	open: function(data) {

		var i;

		if(data.isObj === false) { 
			// convert jQuery collection to array to avoid conflicts later
			mfp.items = data.items.toArray();

			mfp.index = 0;
			var items = data.items,
				item;
			for(i = 0; i < items.length; i++) {
				item = items[i];
				if(item.parsed) {
					item = item.el[0];
				}
				if(item === data.el[0]) {
					mfp.index = i;
					break;
				}
			}
		} else {
			mfp.items = $.isArray(data.items) ? data.items : [data.items];
			mfp.index = data.index || 0;
		}

		// if popup is already opened - we just update the content
		if(mfp.isOpen) {
			mfp.updateItemHTML();
			return;
		}
		
		mfp.types = []; 
		_wrapClasses = '';
		mfp.ev = data.mainEl || _document;

		if(data.key) {
			if(!mfp.popupsCache[data.key]) {
				mfp.popupsCache[data.key] = {};
			}
			mfp.currTemplate = mfp.popupsCache[data.key];
		} else {
			mfp.currTemplate = {};
		}



		mfp.st = $.extend(true, {}, $.magnificPopup.defaults, data ); 
		mfp.fixedContentPos = mfp.st.fixedContentPos === 'auto' ? !mfp.probablyMobile : mfp.st.fixedContentPos;
		
		

		// Building markup
		// main containers are created only once
		if(!mfp.bgOverlay) {

			// Dark overlay
			mfp.bgOverlay = _getEl('bg').on('click'+EVENT_NS, function() {
				mfp.close();
			});

			mfp.wrap = _getEl('wrap').attr('tabindex', -1).on('click'+EVENT_NS, function(e) {
				if(_checkIfClose(e.target)) {
					mfp.close();
				}
			});

			mfp.container = _getEl('container', mfp.wrap);
		}

		mfp.contentContainer = _getEl('content');
		if(mfp.st.preloader) {
			mfp.preloader = _getEl('preloader', mfp.container, mfp.st.tLoading);
		}


		// Initializing modules
		var modules = $.magnificPopup.modules;
		for(i = 0; i < modules.length; i++) {
			var n = modules[i];
			n = n.charAt(0).toUpperCase() + n.slice(1);
			mfp['init'+n].call(mfp);
		}
		_mfpTrigger('BeforeOpen');


		// Close button
		if(!mfp.st.closeBtnInside) {
			mfp.wrap.append( _getCloseBtn() );
		} else {
			_mfpOn(MARKUP_PARSE_EVENT, function(e, template, values, item) {
				values.close_replaceWith = _getCloseBtn(item.type);
			});
			_wrapClasses += ' mfp-close-btn-in';
		}

		if(mfp.st.alignTop) {
			_wrapClasses += ' mfp-align-top';
		}

	

		if(mfp.fixedContentPos) {
			mfp.wrap.css({
				overflow: mfp.st.overflowY,
				overflowX: 'hidden',
				overflowY: mfp.st.overflowY
			});
		} else {
			mfp.wrap.css({ 
				top: _window.scrollTop(),
				position: 'absolute'
			});
		}
		if( mfp.st.fixedBgPos === false || (mfp.st.fixedBgPos === 'auto' && !mfp.fixedContentPos) ) {
			mfp.bgOverlay.css({
				height: _document.height(),
				position: 'absolute'
			});
		}

		

		// Close on ESC key
		_document.on('keyup' + EVENT_NS, function(e) {
			if(e.keyCode === 27) {
				mfp.close();
			}
		});

		_window.on('resize' + EVENT_NS, function() {
			mfp.updateSize();
		});


		if(!mfp.st.closeOnContentClick) {
			_wrapClasses += ' mfp-auto-cursor';
		}
		
		if(_wrapClasses)
			mfp.wrap.addClass(_wrapClasses);


		// this triggers recalculation of layout, so we get it once to not to trigger twice
		var windowHeight = mfp.wH = _window.height();

		
		var bodyStyles = {};

		if( mfp.fixedContentPos ) {
            if(mfp._hasScrollBar(windowHeight)){
                var s = mfp._getScrollbarSize();
                if(s) {
                    bodyStyles.paddingRight = s;
                }
            }
        }

		if(mfp.fixedContentPos) {
			if(!mfp.isIE7) {
				bodyStyles.overflow = 'hidden';
			} else {
				// ie7 double-scroll bug
				$('body, html').css('overflow', 'hidden');
			}
		}

		
		
		var classesToadd = mfp.st.mainClass;
		if(mfp.isIE7) {
			classesToadd += ' mfp-ie7';
		}
		if(classesToadd) {
			mfp._addClassToMFP( classesToadd );
		}

		// add content
		mfp.updateItemHTML();

		_mfpTrigger('BuildControls');


		// remove scrollbar, add padding e.t.c
		_body.css(bodyStyles);
		
		// add everything to DOM
		mfp.bgOverlay.add(mfp.wrap).prependTo( document.body );



		// Save last focused element
		mfp._lastFocusedEl = document.activeElement;
		
		// Wait for next cycle to allow CSS transition
		setTimeout(function() {
			
			if(mfp.content) {
				mfp._addClassToMFP(READY_CLASS);
				_setFocus();
			} else {
				// if content is not defined (not loaded e.t.c) we add class only for BG
				mfp.bgOverlay.addClass(READY_CLASS);
			}
			
			// Trap the focus in popup
			_document.on('focusin' + EVENT_NS, function (e) {
				if( e.target !== mfp.wrap[0] && !$.contains(mfp.wrap[0], e.target) ) {
					_setFocus();
					return false;
				}
			});

		}, 16);

		mfp.isOpen = true;
		mfp.updateSize(windowHeight);
		_mfpTrigger(OPEN_EVENT);
	},

	/**
	 * Closes the popup
	 */
	close: function() {
		if(!mfp.isOpen) return;

		mfp.isOpen = false;
		// for CSS3 animation
		if(mfp.st.removalDelay && !mfp.isLowIE)  {
			mfp._addClassToMFP(REMOVING_CLASS);
			setTimeout(function() {
				mfp._close();
			}, mfp.st.removalDelay);
		} else {
			mfp._close();
		}
	},

	/**
	 * Helper for close() function
	 */
	_close: function() {
		_mfpTrigger(CLOSE_EVENT);

		var classesToRemove = REMOVING_CLASS + ' ' + READY_CLASS + ' ';

		mfp.bgOverlay.detach();
		mfp.wrap.detach();
		mfp.container.empty();

		if(mfp.st.mainClass) {
			classesToRemove += mfp.st.mainClass + ' ';
		}

		mfp._removeClassFromMFP(classesToRemove);

		if(mfp.fixedContentPos) {
			var bodyStyles = {paddingRight: ''};
			if(mfp.isIE7) {
				$('body, html').css('overflow', '');
			} else {
				bodyStyles.overflow = '';
			}
			_body.css(bodyStyles);
		}
		
		_document.off('keyup' + EVENT_NS + ' focusin' + EVENT_NS);
		mfp.ev.off(EVENT_NS);

		// clean up DOM elements that aren't removed
		mfp.wrap.attr('class', 'mfp-wrap').removeAttr('style');
		mfp.bgOverlay.attr('class', 'mfp-bg');
		mfp.container.attr('class', 'mfp-container');

		// remove close button from target element
		if(!mfp.st.closeBtnInside || mfp.currTemplate[mfp.currItem.type] === true ) {
			if(mfp.currTemplate.closeBtn)
				mfp.currTemplate.closeBtn.detach();
		}


		if(mfp._lastFocusedEl) {
			$(mfp._lastFocusedEl).focus(); // put tab focus back
		}
		mfp.currItem = null;	
		mfp.content = null;
		mfp.currTemplate = null;
		mfp.prevHeight = 0;

		_mfpTrigger(AFTER_CLOSE_EVENT);
	},
	
	updateSize: function(winHeight) {

		if(mfp.isIOS) {
			// fixes iOS nav bars https://github.com/dimsemenov/Magnific-Popup/issues/2
			var zoomLevel = document.documentElement.clientWidth / window.innerWidth;
			var height = window.innerHeight * zoomLevel;
			mfp.wrap.css('height', height);
			mfp.wH = height;
		} else {
			mfp.wH = winHeight || _window.height();
		}
		// Fixes #84: popup incorrectly positioned with position:relative on body
		if(!mfp.fixedContentPos) {
			mfp.wrap.css('height', mfp.wH);
		}

		_mfpTrigger('Resize');

	},

	/**
	 * Set content of popup based on current index
	 */
	updateItemHTML: function() {
		var item = mfp.items[mfp.index];

		// Detach and perform modifications
		mfp.contentContainer.detach();

		if(mfp.content)
			mfp.content.detach();

		if(!item.parsed) {
			item = mfp.parseEl( mfp.index );
		}

		var type = item.type;	

		_mfpTrigger('BeforeChange', [mfp.currItem ? mfp.currItem.type : '', type]);
		// BeforeChange event works like so:
		// _mfpOn('BeforeChange', function(e, prevType, newType) { });
		
		mfp.currItem = item;

		

		

		if(!mfp.currTemplate[type]) {
			var markup = mfp.st[type] ? mfp.st[type].markup : false;

			// allows to modify markup
			_mfpTrigger('FirstMarkupParse', markup);

			if(markup) {
				mfp.currTemplate[type] = $(markup);
			} else {
				// if there is no markup found we just define that template is parsed
				mfp.currTemplate[type] = true;
			}
		}

		if(_prevContentType && _prevContentType !== item.type) {
			mfp.container.removeClass('mfp-'+_prevContentType+'-holder');
		}
		
		var newContent = mfp['get' + type.charAt(0).toUpperCase() + type.slice(1)](item, mfp.currTemplate[type]);
		mfp.appendContent(newContent, type);

		item.preloaded = true;

		_mfpTrigger(CHANGE_EVENT, item);
		_prevContentType = item.type;
		
		// Append container back after its content changed
		mfp.container.prepend(mfp.contentContainer);

		_mfpTrigger('AfterChange');
	},


	/**
	 * Set HTML content of popup
	 */
	appendContent: function(newContent, type) {
		mfp.content = newContent;
		
		if(newContent) {
			if(mfp.st.closeBtnInside && mfp.currTemplate[type] === true) {
				// if there is no markup, we just append close button element inside
				if(!mfp.content.find('.mfp-close').length) {
					mfp.content.append(_getCloseBtn());
				}
			} else {
				mfp.content = newContent;
			}
		} else {
			mfp.content = '';
		}

		_mfpTrigger(BEFORE_APPEND_EVENT);
		mfp.container.addClass('mfp-'+type+'-holder');

		mfp.contentContainer.append(mfp.content);
	},



	
	/**
	 * Creates Magnific Popup data object based on given data
	 * @param  {int} index Index of item to parse
	 */
	parseEl: function(index) {
		var item = mfp.items[index],
			type = item.type;

		if(item.tagName) {
			item = { el: $(item) };
		} else {
			item = { data: item, src: item.src };
		}

		if(item.el) {
			var types = mfp.types;

			// check for 'mfp-TYPE' class
			for(var i = 0; i < types.length; i++) {
				if( item.el.hasClass('mfp-'+types[i]) ) {
					type = types[i];
					break;
				}
			}

			item.src = item.el.attr('data-mfp-src');
			if(!item.src) {
				item.src = item.el.attr('href');
			}
		}

		item.type = type || mfp.st.type || 'inline';
		item.index = index;
		item.parsed = true;
		mfp.items[index] = item;
		_mfpTrigger('ElementParse', item);

		return mfp.items[index];
	},


	/**
	 * Initializes single popup or a group of popups
	 */
	addGroup: function(el, options) {
		var eHandler = function(e) {
			e.mfpEl = this;
			mfp._openClick(e, el, options);
		};

		if(!options) {
			options = {};
		} 

		var eName = 'click.magnificPopup';
		options.mainEl = el;
		
		if(options.items) {
			options.isObj = true;
			el.off(eName).on(eName, eHandler);
		} else {
			options.isObj = false;
			if(options.delegate) {
				el.off(eName).on(eName, options.delegate , eHandler);
			} else {
				options.items = el;
				el.off(eName).on(eName, eHandler);
			}
		}
	},
	_openClick: function(e, el, options) {
		var midClick = options.midClick !== undefined ? options.midClick : $.magnificPopup.defaults.midClick;
		if( midClick || e.which !== 2 ) {
			var disableOn = options.disableOn !== undefined ? options.disableOn : $.magnificPopup.defaults.disableOn;

			if(disableOn) {
				if($.isFunction(disableOn)) {
					if( !disableOn.call(mfp) ) {
						return true;
					}
				} else { // else it's number
					if( _window.width() < disableOn ) {
						return true;
					}
				}
			}
			
			if(e.type) {
				e.preventDefault();

				// This will prevent popup from closing if element is inside and popup is already opened
				if(mfp.isOpen) {
					e.stopPropagation();
				}
			}
				

			options.el = $(e.mfpEl);
			if(options.delegate) {
				options.items = el.find(options.delegate);
			}
			mfp.open(options);
		}
	},


	/**
	 * Updates text on preloader
	 */
	updateStatus: function(status, text) {

		if(mfp.preloader) {
			if(_prevStatus !== status) {
				mfp.container.removeClass('mfp-s-'+_prevStatus);
			}

			if(!text && status === 'loading') {
				text = mfp.st.tLoading;
			}

			var data = {
				status: status,
				text: text
			};
			// allows to modify status
			_mfpTrigger('UpdateStatus', data);

			status = data.status;
			text = data.text;

			mfp.preloader.html(text);

			mfp.preloader.find('a').click(function(e) {
				e.stopImmediatePropagation();
			});

			mfp.container.addClass('mfp-s-'+status);
			_prevStatus = status;
		}
	},


	/*
		"Private" helpers that aren't private at all
	 */
	_addClassToMFP: function(cName) {
		mfp.bgOverlay.addClass(cName);
		mfp.wrap.addClass(cName);
	},
	_removeClassFromMFP: function(cName) {
		this.bgOverlay.removeClass(cName);
		mfp.wrap.removeClass(cName);
	},
	_hasScrollBar: function(winHeight) {
		return (  (mfp.isIE7 ? _document.height() : document.body.scrollHeight) > (winHeight || _window.height()) )
	},
	_parseMarkup: function(template, values, item) {
		var arr;
		if(item.data) {
			values = $.extend(item.data, values);
		}
		_mfpTrigger(MARKUP_PARSE_EVENT, [template, values, item] );

		$.each(values, function(key, value) {
			if(value === undefined || value === false) {
				return true;
			}
			arr = key.split('_');
			if(arr.length > 1) {
				var el = template.find(EVENT_NS + '-'+arr[0]);

				if(el.length > 0) {
					var attr = arr[1];
					if(attr === 'replaceWith') {
						if(el[0] !== value[0]) {
							el.replaceWith(value);
						}
					} else if(attr === 'img') {
						if(el.is('img')) {
							el.attr('src', value);
						} else {
							el.replaceWith( '<img src="'+value+'" class="' + el.attr('class') + '" />' );
						}
					} else {
						el.attr(arr[1], value);
					}
				}

			} else {
				template.find(EVENT_NS + '-'+key).html(value);
			}
		});
	},

	_getScrollbarSize: function() {
		// thx David
		if(mfp.scrollbarSize === undefined) {
			var scrollDiv = document.createElement("div");
			scrollDiv.id = "mfp-sbm";
			scrollDiv.style.cssText = 'width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;';
			document.body.appendChild(scrollDiv);
			mfp.scrollbarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;
			document.body.removeChild(scrollDiv);
		}
		return mfp.scrollbarSize;
	}

}; /* MagnificPopup core prototype end */




/**
 * Public static functions
 */
$.magnificPopup = {
	instance: null,
	proto: MagnificPopup.prototype,
	modules: [],

	open: function(options, index) {
		_checkInstance();	

		if(!options) 
			options = {};

		options.isObj = true;
		options.index = index || 0;
		return this.instance.open(options);
	},

	close: function() {
		return $.magnificPopup.instance.close();
	},

	registerModule: function(name, module) {
		if(module.options) {
			$.magnificPopup.defaults[name] = module.options;
		}
		$.extend(this.proto, module.proto);			
		this.modules.push(name);
	},

	defaults: {   

		// Info about options is in docs:
		// http://dimsemenov.com/plugins/magnific-popup/documentation.html#options
		
		disableOn: 0,	

		key: null,

		midClick: false,

		mainClass: '',

		preloader: true,

		focus: '', // CSS selector of input to focus after popup is opened
		
		closeOnContentClick: false,

		closeOnBgClick: true,

		closeBtnInside: true, 

		alignTop: false,
	
		removalDelay: 0,
		
		fixedContentPos: 'auto', 
	
		fixedBgPos: 'auto',

		overflowY: 'auto',

		closeMarkup: '<button title="%title%" type="button" class="mfp-close">&times;</button>',

		tClose: 'Close (Esc)',

		tLoading: 'Loading...'

	}
};



$.fn.magnificPopup = function(options) {
	_checkInstance();

	var jqEl = $(this);

	// We call some API method of first param is a string
	if (typeof options === "string" ) {

		if(options === 'open') {
			var items,
				itemOpts = _isJQ ? jqEl.data('magnificPopup') : jqEl[0].magnificPopup,
				index = parseInt(arguments[1], 10) || 0;

			if(itemOpts.items) {
				items = itemOpts.items[index];
			} else {
				items = jqEl;
				if(itemOpts.delegate) {
					items = items.find(itemOpts.delegate);
				}
				items = items.eq( index );
			}
			mfp._openClick({mfpEl:items}, jqEl, itemOpts);
		} else {
			if(mfp.isOpen)
				mfp[options].apply(mfp, Array.prototype.slice.call(arguments, 1));
		}

	} else {

		/*
		 * As Zepto doesn't support .data() method for objects 
		 * and it works only in normal browsers
		 * we assign "options" object directly to the DOM element. FTW!
		 */
		if(_isJQ) {
			jqEl.data('magnificPopup', options);
		} else {
			jqEl[0].magnificPopup = options;
		}

		mfp.addGroup(jqEl, options);

	}
	return jqEl;
};


//Quick benchmark
/*
var start = performance.now(),
	i,
	rounds = 1000;

for(i = 0; i < rounds; i++) {

}
console.log('Test #1:', performance.now() - start);

start = performance.now();
for(i = 0; i < rounds; i++) {

}
console.log('Test #2:', performance.now() - start);
*/


/*>>core*/

/*>>inline*/

var INLINE_NS = 'inline',
	_hiddenClass,
	_inlinePlaceholder, 
	_lastInlineElement,
	_putInlineElementsBack = function() {
		if(_lastInlineElement) {
			_inlinePlaceholder.after( _lastInlineElement.addClass(_hiddenClass) ).detach();
			_lastInlineElement = null;
		}
	};

$.magnificPopup.registerModule(INLINE_NS, {
	options: {
		hiddenClass: 'hide', // will be appended with `mfp-` prefix
		markup: '',
		tNotFound: 'Content not found'
	},
	proto: {

		initInline: function() {
			mfp.types.push(INLINE_NS);

			_mfpOn(CLOSE_EVENT+'.'+INLINE_NS, function() {
				_putInlineElementsBack();
			});
		},

		getInline: function(item, template) {

			_putInlineElementsBack();

			if(item.src) {
				var inlineSt = mfp.st.inline,
					el = $(item.src);

				if(el.length) {

					// If target element has parent - we replace it with placeholder and put it back after popup is closed
					var parent = el[0].parentNode;
					if(parent && parent.tagName) {
						if(!_inlinePlaceholder) {
							_hiddenClass = inlineSt.hiddenClass;
							_inlinePlaceholder = _getEl(_hiddenClass);
							_hiddenClass = 'mfp-'+_hiddenClass;
						}
						// replace target inline element with placeholder
						_lastInlineElement = el.after(_inlinePlaceholder).detach().removeClass(_hiddenClass);
					}

					mfp.updateStatus('ready');
				} else {
					mfp.updateStatus('error', inlineSt.tNotFound);
					el = $('<div>');
				}

				item.inlineElement = el;
				return el;
			}

			mfp.updateStatus('ready');
			mfp._parseMarkup(template, {}, item);
			return template;
		}
	}
});

/*>>inline*/

/*>>ajax*/
var AJAX_NS = 'ajax',
	_ajaxCur,
	_removeAjaxCursor = function() {
		if(_ajaxCur) {
			_body.removeClass(_ajaxCur);
		}
	};

$.magnificPopup.registerModule(AJAX_NS, {

	options: {
		settings: null,
		cursor: 'mfp-ajax-cur',
		tError: '<a href="%url%">The content</a> could not be loaded.'
	},

	proto: {
		initAjax: function() {
			mfp.types.push(AJAX_NS);
			_ajaxCur = mfp.st.ajax.cursor;

			_mfpOn(CLOSE_EVENT+'.'+AJAX_NS, function() {
				_removeAjaxCursor();
				if(mfp.req) {
					mfp.req.abort();
				}
			});
		},

		getAjax: function(item) {

			if(_ajaxCur)
				_body.addClass(_ajaxCur);

			mfp.updateStatus('loading');
//console.log('item src',item.src);

			var opts = $.extend({
				url: item.src,
				success: function(data, textStatus, jqXHR) {
				//console.log('item data',data);
					var temp = {
						data:data,
						xhr:jqXHR
					};

					_mfpTrigger('ParseAjax', temp);
					

					mfp.appendContent( $(temp.data), AJAX_NS );

					item.finished = true;

					_removeAjaxCursor();

					_setFocus();

					setTimeout(function() {
						mfp.wrap.addClass(READY_CLASS);
					}, 16);

					mfp.updateStatus('ready');

					_mfpTrigger('AjaxContentAdded');
				},
				error: function() {
					_removeAjaxCursor();
					item.finished = item.loadError = true;
					mfp.updateStatus('error', mfp.st.ajax.tError.replace('%url%', item.src));
				}
			}, mfp.st.ajax.settings);

			mfp.req = $.ajax(opts);

			return '';
		}
	}
});





	

/*>>ajax*/

/*>>image*/
var _imgInterval,
	_getTitle = function(item) {
		if(item.data && item.data.title !== undefined) 
			return item.data.title;

		var src = mfp.st.image.titleSrc;

		if(src) {
			if($.isFunction(src)) {
				return src.call(mfp, item);
			} else if(item.el) {
				return item.el.attr(src) || '';
			}
		}
		return '';
	};

$.magnificPopup.registerModule('image', {

	options: {
		markup: '<div class="mfp-figure">'+
					'<div class="mfp-close"></div>'+
					'<div class="mfp-img"></div>'+
					'<div class="mfp-bottom-bar">'+
						'<div class="mfp-title"></div>'+
						'<div class="mfp-counter"></div>'+
					'</div>'+
				'</div>',
		cursor: 'mfp-zoom-out-cur',
		titleSrc: 'title', 
		verticalFit: true,
		tError: '<a href="%url%">The image</a> could not be loaded.'
	},

	proto: {
		initImage: function() {
			var imgSt = mfp.st.image,
				ns = '.image';

			mfp.types.push('image');

			_mfpOn(OPEN_EVENT+ns, function() {
				if(mfp.currItem.type === 'image' && imgSt.cursor) {
					_body.addClass(imgSt.cursor);
				}
			});

			_mfpOn(CLOSE_EVENT+ns, function() {
				if(imgSt.cursor) {
					_body.removeClass(imgSt.cursor);
				}
				_window.off('resize' + EVENT_NS);
			});

			_mfpOn('Resize'+ns, mfp.resizeImage);
			if(mfp.isLowIE) {
				_mfpOn('AfterChange', mfp.resizeImage);
			}
		},
		resizeImage: function() {
			var item = mfp.currItem;
			if(!item.img) return;

			if(mfp.st.image.verticalFit) {
				var decr = 0;
				// fix box-sizing in ie7/8
				if(mfp.isLowIE) {
					decr = parseInt(item.img.css('padding-top'), 10) + parseInt(item.img.css('padding-bottom'),10);
				}
				item.img.css('max-height', mfp.wH-decr);
			}
		},
		_onImageHasSize: function(item) {
			if(item.img) {
				
				item.hasSize = true;

				if(_imgInterval) {
					clearInterval(_imgInterval);
				}
				
				item.isCheckingImgSize = false;

				_mfpTrigger('ImageHasSize', item);

				if(item.imgHidden) {
					if(mfp.content)
						mfp.content.removeClass('mfp-loading');
					
					item.imgHidden = false;
				}

			}
		},

		/**
		 * Function that loops until the image has size to display elements that rely on it asap
		 */
		findImageSize: function(item) {

			var counter = 0,
				img = item.img[0],
				mfpSetInterval = function(delay) {

					if(_imgInterval) {
						clearInterval(_imgInterval);
					}
					// decelerating interval that checks for size of an image
					_imgInterval = setInterval(function() {
						if(img.naturalWidth > 0) {
							mfp._onImageHasSize(item);
							return;
						}

						if(counter > 200) {
							clearInterval(_imgInterval);
						}

						counter++;
						if(counter === 3) {
							mfpSetInterval(10);
						} else if(counter === 40) {
							mfpSetInterval(50);
						} else if(counter === 100) {
							mfpSetInterval(500);
						}
					}, delay);
				};

			mfpSetInterval(1);
		},

		getImage: function(item, template) {

			var guard = 0,

				// image load complete handler
				onLoadComplete = function() {
					if(item) {
						if (item.img[0].complete) {
							item.img.off('.mfploader');
							
							if(item === mfp.currItem){
								mfp._onImageHasSize(item);

								mfp.updateStatus('ready');
							}

							item.hasSize = true;
							item.loaded = true;
							
						}
						else {
							// if image complete check fails 200 times (20 sec), we assume that there was an error.
							guard++;
							if(guard < 200) {
								setTimeout(onLoadComplete,100);
							} else {
								onLoadError();
							}
						}
					}
				},

				// image error handler
				onLoadError = function() {
					if(item) {
						item.img.off('.mfploader');
						if(item === mfp.currItem){
							mfp._onImageHasSize(item);
							mfp.updateStatus('error', imgSt.tError.replace('%url%', item.src) );
						}

						item.hasSize = true;
						item.loaded = true;
						item.loadError = true;
					}
				},
				imgSt = mfp.st.image;


			var el = template.find('.mfp-img');
			if(el.length) {
				var img = new Image();
				img.className = 'mfp-img';
				item.img = $(img).on('load.mfploader', onLoadComplete).on('error.mfploader', onLoadError);
				img.src = item.src;

				// without clone() "error" event is not firing when IMG is replaced by new IMG
				// TODO: find a way to avoid such cloning
				if(el.is('img')) {
					item.img = item.img.clone();
				}
			}

			mfp._parseMarkup(template, {
				title: _getTitle(item),
				img_replaceWith: item.img
			}, item);

			mfp.resizeImage();

			if(item.hasSize) {
				if(_imgInterval) clearInterval(_imgInterval);

				if(item.loadError) {
					template.addClass('mfp-loading');
					mfp.updateStatus('error', imgSt.tError.replace('%url%', item.src) );
				} else {
					template.removeClass('mfp-loading');
					mfp.updateStatus('ready');
				}
				return template;
			}

			mfp.updateStatus('loading');
			item.loading = true;

			if(!item.hasSize) {
				item.imgHidden = true;
				template.addClass('mfp-loading');
				mfp.findImageSize(item);
			} 

			return template;
		}
	}
});



/*>>image*/

/*>>iframe*/

var IFRAME_NS = 'iframe',
	_emptyPage = '//about:blank',
	
	_fixIframeBugs = function(isShowing) {
		if(mfp.currTemplate[IFRAME_NS]) {
			var el = mfp.currTemplate[IFRAME_NS].find('iframe');
			if(el.length) { 
				// reset src after the popup is closed to avoid "video keeps playing after popup is closed" bug
				if(!isShowing) {
					el[0].src = _emptyPage;
				}

				// IE8 black screen bug fix
				if(mfp.isIE8) {
					el.css('display', isShowing ? 'block' : 'none');
				}
			}
		}
	};

$.magnificPopup.registerModule(IFRAME_NS, {

	options: {
		markup: '<div class="mfp-iframe-scaler">'+
					'<div class="mfp-close"></div>'+
					'<iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe>'+
				'</div>',

		srcAction: 'iframe_src',

		// we don't care and support only one default type of URL by default
		patterns: {
			youtube: {
				index: 'youtube.com', 
				id: 'v=', 
				src: '//www.youtube.com/embed/%id%?autoplay=1'
			},
			vimeo: {
				index: 'vimeo.com/',
				id: '/',
				src: '//player.vimeo.com/video/%id%?autoplay=1'
			},
			gmaps: {
				index: '//maps.google.',
				src: '%id%&output=embed'
			}
		}
	},

	proto: {
		initIframe: function() {
			mfp.types.push(IFRAME_NS);

			_mfpOn('BeforeChange', function(e, prevType, newType) {
				if(prevType !== newType) {
					if(prevType === IFRAME_NS) {
						_fixIframeBugs(); // iframe if removed
					} else if(newType === IFRAME_NS) {
						_fixIframeBugs(true); // iframe is showing
					} 
				}// else {
					// iframe source is switched, don't do anything
				//}
			});

			_mfpOn(CLOSE_EVENT + '.' + IFRAME_NS, function() {
				_fixIframeBugs();
			});
		},

		getIframe: function(item, template) {
			var embedSrc = item.src;
			var iframeSt = mfp.st.iframe;
				
			$.each(iframeSt.patterns, function() {
				if(embedSrc.indexOf( this.index ) > -1) {
					if(this.id) {
						if(typeof this.id === 'string') {
							embedSrc = embedSrc.substr(embedSrc.lastIndexOf(this.id)+this.id.length, embedSrc.length);
						} else {
							embedSrc = this.id.call( this, embedSrc );
						}
					}
					embedSrc = this.src.replace('%id%', embedSrc );
					return false; // break;
				}
			});
			
			var dataObj = {};
			if(iframeSt.srcAction) {
				dataObj[iframeSt.srcAction] = embedSrc;
			}
			mfp._parseMarkup(template, dataObj, item);

			mfp.updateStatus('ready');

			return template;
		}
	}
});



/*>>iframe*/

/*>>gallery*/
/**
 * Get looped index depending on number of slides
 */
var _getLoopedId = function(index) {
		var numSlides = mfp.items.length;
		if(index > numSlides - 1) {
			return index - numSlides;
		} else  if(index < 0) {
			return numSlides + index;
		}
		return index;
	},
	_replaceCurrTotal = function(text, curr, total) {
		return text.replace('%curr%', curr + 1).replace('%total%', total);
	};

$.magnificPopup.registerModule('gallery', {

	options: {
		enabled: false,
		arrowMarkup: '<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>',
		preload: [0,2],
		navigateByImgClick: true,
		arrows: true,

		tPrev: 'Previous (Left arrow key)',
		tNext: 'Next (Right arrow key)',
		tCounter: '%curr% of %total%'
	},

	proto: {
		initGallery: function() {

			var gSt = mfp.st.gallery,
				ns = '.mfp-gallery',
				supportsFastClick = Boolean($.fn.mfpFastClick);

			mfp.direction = true; // true - next, false - prev
			
			if(!gSt || !gSt.enabled ) return false;

			_wrapClasses += ' mfp-gallery';

			_mfpOn(OPEN_EVENT+ns, function() {

				if(gSt.navigateByImgClick) {
					mfp.wrap.on('click'+ns, '.mfp-img', function() {
						if(mfp.items.length > 1) {
							mfp.next();
							return false;
						}
					});
				}

				_document.on('keydown'+ns, function(e) {
					if (e.keyCode === 37) {
						mfp.prev();
					} else if (e.keyCode === 39) {
						mfp.next();
					}
				});
			});

			_mfpOn('UpdateStatus'+ns, function(e, data) {
				if(data.text) {
					data.text = _replaceCurrTotal(data.text, mfp.currItem.index, mfp.items.length);
				}
			});

			_mfpOn(MARKUP_PARSE_EVENT+ns, function(e, element, values, item) {
				var l = mfp.items.length;
				values.counter = l > 1 ? _replaceCurrTotal(gSt.tCounter, item.index, l) : '';
			});

			_mfpOn('BuildControls' + ns, function() {
				if(mfp.items.length > 1 && gSt.arrows && !mfp.arrowLeft) {
					var markup = gSt.arrowMarkup,
						arrowLeft = mfp.arrowLeft = $( markup.replace('%title%', gSt.tPrev).replace('%dir%', 'left') ).addClass(PREVENT_CLOSE_CLASS),			
						arrowRight = mfp.arrowRight = $( markup.replace('%title%', gSt.tNext).replace('%dir%', 'right') ).addClass(PREVENT_CLOSE_CLASS);

					var eName = supportsFastClick ? 'mfpFastClick' : 'click';
					arrowLeft[eName](function() {
						mfp.prev();
					});			
					arrowRight[eName](function() {
						mfp.next();
					});	

					// Polyfill for :before and :after (adds elements with classes mfp-a and mfp-b)
					if(mfp.isIE7) {
						_getEl('b', arrowLeft[0], false, true);
						_getEl('a', arrowLeft[0], false, true);
						_getEl('b', arrowRight[0], false, true);
						_getEl('a', arrowRight[0], false, true);
					}

					mfp.container.append(arrowLeft.add(arrowRight));
				}
			});

			_mfpOn(CHANGE_EVENT+ns, function() {
				if(mfp._preloadTimeout) clearTimeout(mfp._preloadTimeout);

				mfp._preloadTimeout = setTimeout(function() {
					mfp.preloadNearbyImages();
					mfp._preloadTimeout = null;
				}, 16);		
			});


			_mfpOn(CLOSE_EVENT+ns, function() {
				_document.off(ns);
				mfp.wrap.off('click'+ns);
			
				if(mfp.arrowLeft && supportsFastClick) {
					mfp.arrowLeft.add(mfp.arrowRight).destroyMfpFastClick();
				}
				mfp.arrowRight = mfp.arrowLeft = null;
			});

		}, 
		next: function() {
			mfp.direction = true;
			mfp.index = _getLoopedId(mfp.index + 1);
			mfp.updateItemHTML();
		},
		prev: function() {
			mfp.direction = false;
			mfp.index = _getLoopedId(mfp.index - 1);
			mfp.updateItemHTML();
		},
		goTo: function(newIndex) {
			mfp.direction = (newIndex >= mfp.index);
			mfp.index = newIndex;
			mfp.updateItemHTML();
		},
		preloadNearbyImages: function() {
			var p = mfp.st.gallery.preload,
				preloadBefore = Math.min(p[0], mfp.items.length),
				preloadAfter = Math.min(p[1], mfp.items.length),
				i;

			for(i = 1; i <= (mfp.direction ? preloadAfter : preloadBefore); i++) {
				mfp._preloadItem(mfp.index+i);
			}
			for(i = 1; i <= (mfp.direction ? preloadBefore : preloadAfter); i++) {
				mfp._preloadItem(mfp.index-i);
			}
		},
		_preloadItem: function(index) {
			index = _getLoopedId(index);

			if(mfp.items[index].preloaded) {
				return;
			}

			var item = mfp.items[index];
			if(!item.parsed) {
				item = mfp.parseEl( index );
			}

			_mfpTrigger('LazyLoad', item);

			if(item.type === 'image') {
				item.img = $('<img class="mfp-img" />').on('load.mfploader', function() {
					item.hasSize = true;
				}).on('error.mfploader', function() {
					item.hasSize = true;
					item.loadError = true;
				}).attr('src', item.src);
			}


			item.preloaded = true;
		}
	}
});

/*
Touch Support that might be implemented some day

addSwipeGesture: function() {
	var startX,
		moved,
		multipleTouches;

		return;

	var namespace = '.mfp',
		addEventNames = function(pref, down, move, up, cancel) {
			mfp._tStart = pref + down + namespace;
			mfp._tMove = pref + move + namespace;
			mfp._tEnd = pref + up + namespace;
			mfp._tCancel = pref + cancel + namespace;
		};

	if(window.navigator.msPointerEnabled) {
		addEventNames('MSPointer', 'Down', 'Move', 'Up', 'Cancel');
	} else if('ontouchstart' in window) {
		addEventNames('touch', 'start', 'move', 'end', 'cancel');
	} else {
		return;
	}
	_window.on(mfp._tStart, function(e) {
		var oE = e.originalEvent;
		multipleTouches = moved = false;
		startX = oE.pageX || oE.changedTouches[0].pageX;
	}).on(mfp._tMove, function(e) {
		if(e.originalEvent.touches.length > 1) {
			multipleTouches = e.originalEvent.touches.length;
		} else {
			//e.preventDefault();
			moved = true;
		}
	}).on(mfp._tEnd + ' ' + mfp._tCancel, function(e) {
		if(moved && !multipleTouches) {
			var oE = e.originalEvent,
				diff = startX - (oE.pageX || oE.changedTouches[0].pageX);

			if(diff > 20) {
				mfp.next();
			} else if(diff < -20) {
				mfp.prev();
			}
		}
	});
},
*/


/*>>gallery*/

/*>>retina*/

var RETINA_NS = 'retina';

$.magnificPopup.registerModule(RETINA_NS, {
	options: {
		replaceSrc: function(item) {
			return item.src.replace(/\.\w+$/, function(m) { return '@2x' + m; });
		},
		ratio: 1 // Function or number.  Set to 1 to disable.
	},
	proto: {
		initRetina: function() {
			if(window.devicePixelRatio > 1) {

				var st = mfp.st.retina,
					ratio = st.ratio;

				ratio = !isNaN(ratio) ? ratio : ratio();

				if(ratio > 1) {
					_mfpOn('ImageHasSize' + '.' + RETINA_NS, function(e, item) {
						item.img.css({
							'max-width': item.img[0].naturalWidth / ratio,
							'width': '100%'
						});
					});
					_mfpOn('ElementParse' + '.' + RETINA_NS, function(e, item) {
						item.src = st.replaceSrc(item, ratio);
					});
				}
			}

		}
	}
});

/*>>retina*/

/*>>fastclick*/
/**
 * FastClick event implementation. (removes 300ms delay on touch devices)
 * Based on https://developers.google.com/mobile/articles/fast_buttons
 *
 * You may use it outside the Magnific Popup by calling just:
 *
 * $('.your-el').mfpFastClick(function() {
 *     console.log('Clicked!');
 * });
 *
 * To unbind:
 * $('.your-el').destroyMfpFastClick();
 * 
 * 
 * Note that it's a very basic and simple implementation, it blocks ghost click on the same element where it was bound.
 * If you need something more advanced, use plugin by FT Labs https://github.com/ftlabs/fastclick
 * 
 */

(function() {
	var ghostClickDelay = 1000,
		supportsTouch = 'ontouchstart' in window,
		unbindTouchMove = function() {
			_window.off('touchmove'+ns+' touchend'+ns);
		},
		eName = 'mfpFastClick',
		ns = '.'+eName;


	// As Zepto.js doesn't have an easy way to add custom events (like jQuery), so we implement it in this way
	$.fn.mfpFastClick = function(callback) {

		return $(this).each(function() {

			var elem = $(this),
				lock;

			if( supportsTouch ) {

				var timeout,
					startX,
					startY,
					pointerMoved,
					point,
					numPointers;

				elem.on('touchstart' + ns, function(e) {
					pointerMoved = false;
					numPointers = 1;

					point = e.originalEvent ? e.originalEvent.touches[0] : e.touches[0];
					startX = point.clientX;
					startY = point.clientY;

					_window.on('touchmove'+ns, function(e) {
						point = e.originalEvent ? e.originalEvent.touches : e.touches;
						numPointers = point.length;
						point = point[0];
						if (Math.abs(point.clientX - startX) > 10 ||
							Math.abs(point.clientY - startY) > 10) {
							pointerMoved = true;
							unbindTouchMove();
						}
					}).on('touchend'+ns, function(e) {
						unbindTouchMove();
						if(pointerMoved || numPointers > 1) {
							return;
						}
						lock = true;
						e.preventDefault();
						clearTimeout(timeout);
						timeout = setTimeout(function() {
							lock = false;
						}, ghostClickDelay);
						callback();
					});
				});

			}

			elem.on('click' + ns, function() {
				if(!lock) {
					callback();
				}
			});
		});
	};

	$.fn.destroyMfpFastClick = function() {
		$(this).off('touchstart' + ns + ' click' + ns);
		if(supportsTouch) _window.off('touchmove'+ns+' touchend'+ns);
	};
})();

/*>>fastclick*/
})(window.jQuery || window.Zepto);;
/**
 * @file
 * A JavaScript file for the theme.
 *
 * In order for this JavaScript to be loaded on pages, see the instructions in
 * the README.txt next to this file.
 */

// JavaScript should be made compatible with libraries other than jQuery by
// wrapping it with an "anonymous closure". See:
// - http://drupal.org/node/1446420
// - http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth
(function ($, Drupal, window, document, undefined) {
	

	$(document).ready(function() {
		
		//Login popup
		$('#user-login-popup').magnificPopup({
		  type:'inline',
		  closeBtnInside: true,
		  // Class that is added to popup wrapper and background
			// make it unique to apply your CSS animations just to this exact popup
			mainClass: 'mfp-fade',
		});
		
		$('.not-logged-in #block-system-user-menu .menu a').magnificPopup({		  
		  items:{
		  	type:'inline',
			  src: '#block-pb-pb-login',
		  },
		  closeBtnInside: true,
		  // Class that is added to popup wrapper and background
			// make it unique to apply your CSS animations just to this exact popup
			mainClass: 'mfp-fade',
		});
		
	
		//Building popup
		$('#building-53 .building-header').magnificPopup({
			delegate: 'a',
			// Class that is added to popup wrapper and background
			// make it unique to apply your CSS animations just to this exact popup
			mainClass: 'mfp-fade',
		  closeBtnInside: true,
		  gallery: {
      	enabled: true	      
      },
      callbacks: {    
		    buildControls: function() {
		       // re-appends controls inside the main container
		      this.content.append(this.arrowLeft.add(this.arrowRight));
		    },		    
		    change: function() {
		    	//animate image in popup on desktop, not tablet
		    	if(!Drupal.settings.shrimp.isTablet){		    	
			    	//http://stackoverflow.com/questions/3949123/cycle-animation
			    	var $image = $('.building-section-image img', this.contentContainer),	        
		        delay = 700,
		        duration = 34000,
		        moveRight = function(){
		            $image.stop().animate({
		                left: '-'+ ($image.attr('width') - 470) //container width
		            }, {
		                duration: duration,
		                complete: moveLeft,
		                easing: 'linear'
		            });
		        },
		        moveLeft = function(){
		            $image.stop().animate({
		                left: '-10px'
		            }, {
		                duration: duration,
		                complete: moveRight,
		                easing: 'linear'
		            });
		       }
		       moveRight();
        };
               
        
        
		    // re-appends controls inside the main container
		      if(this.arrowLeft){
			      this.content.append(this.arrowLeft.add(this.arrowRight));
		      }		      
		    }		    
		  }
		});
		
		//Main investment link	
		$('.investment-item a').magnificPopup({	
		  type: 'ajax',
		  removalDelay: 300,		
			//Move close button inside the content container
		  closeBtnInside: true,		  
			// Class that is added to popup wrapper and background
			// make it unique to apply your CSS animations just to this exact popup
			mainClass: 'mfp-fade',		  
		  ajax: {
			  settings: null, // Ajax settings object that will extend default one - http://api.jquery.com/jQuery.ajax/#jQuery-ajax-settings
			  // For example:
			  // settings: {cache:false, async:false}
			  cursor: 'mfp-ajax-cur', // CSS class that will be added to body during the loading (adds "progress" cursor)
			  tError: '<a href="%url%">The content</a> could not be loaded.' //  Error message, can contain %curr% and %total% tags if gallery is enabled
		  },
	    gallery: {
	      enabled: true	      
	    },		  
		  callbacks: {		  	
			  parseAjax: function(mfpResponse) {
			    // mfpResponse.data is a "data" object from ajax "success" callback
			    // for simple HTML file, it will be just String
			    // You may modify it to change contents of the popup
			    // For example, to show just #some-element:
			     mfpResponse.data = $(mfpResponse.data).find('article');
			     mfpResponse.data.append(this.arrowLeft.add(this.arrowRight));
			  },
			  beforeOpen: function() {
          // Will fire when this exact popup is opened
          // this - is Magnific Popup object
          $('body').addClass('mfp-open');
        },
        afterClose: function() {
          // Will fire when popup is closed
          $('body').removeClass('mfp-open');
        }
			},
		});
		
		//copy of above, because of addition of second a link	
		$('.investment-item-tablet a').magnificPopup({	
		  type: 'ajax',
		  removalDelay: 300,		
			//Move close button inside the content container
		  closeBtnInside: true,		  
			// Class that is added to popup wrapper and background
			// make it unique to apply your CSS animations just to this exact popup
			mainClass: 'mfp-fade',		  
		  ajax: {
			  settings: null, // Ajax settings object that will extend default one - http://api.jquery.com/jQuery.ajax/#jQuery-ajax-settings
			  // For example:
			  // settings: {cache:false, async:false}
			  cursor: 'mfp-ajax-cur', // CSS class that will be added to body during the loading (adds "progress" cursor)
			  tError: '<a href="%url%">The content</a> could not be loaded.' //  Error message, can contain %curr% and %total% tags if gallery is enabled
		  },
	    gallery: {
	      enabled: true	      
	    },		  
		  callbacks: {		  	
			  parseAjax: function(mfpResponse) {
			    // mfpResponse.data is a "data" object from ajax "success" callback
			    // for simple HTML file, it will be just String
			    // You may modify it to change contents of the popup
			    // For example, to show just #some-element:
			     mfpResponse.data = $(mfpResponse.data).find('article');
			     mfpResponse.data.append(this.arrowLeft.add(this.arrowRight));
			  },
			  beforeOpen: function() {
          // Will fire when this exact popup is opened
          // this - is Magnific Popup object
          $('body').addClass('mfp-open');
        },
        afterClose: function() {
          // Will fire when popup is closed
          $('body').removeClass('mfp-open');
        }
			},
		});
		
		$('.open-popup-ajax').magnificPopup({	
		  type: 'ajax',
		  removalDelay: 300,		
			//Move close button inside the content container
		  closeBtnInside: true,		  
			// Class that is added to popup wrapper and background
			// make it unique to apply your CSS animations just to this exact popup
			mainClass: 'mfp-fade',		  
		  ajax: {
			  settings: null, // Ajax settings object that will extend default one - http://api.jquery.com/jQuery.ajax/#jQuery-ajax-settings
			  // For example:
			  // settings: {cache:false, async:false}
			  cursor: 'mfp-ajax-cur', // CSS class that will be added to body during the loading (adds "progress" cursor)
			  tError: '<a href="%url%">The content</a> could not be loaded.' //  Error message, can contain %curr% and %total% tags if gallery is enabled
		  },		  
		  callbacks: {		  	
			  parseAjax: function(mfpResponse) {
			    // mfpResponse.data is a "data" object from ajax "success" callback
			    // for simple HTML file, it will be just String
			    // You may modify it to change contents of the popup
			    // For example, to show just #some-element:
			 			     mfpResponse.data = $(mfpResponse.data).find('.node.view-mode-full');
			  },
			  beforeOpen: function() {
          // Will fire when this exact popup is opened
          // this - is Magnific Popup object
          $('body').addClass('mfp-open');
        },
        afterClose: function() {
          // Will fire when popup is closed
          $('body').removeClass('mfp-open');
        }
			},
		});

	});

})(jQuery, Drupal, this, this.document);
;
/**
 * @file
 * A JavaScript file for the theme.
 *
 * In order for this JavaScript to be loaded on pages, see the instructions in
 * the README.txt next to this file.
 */

// JavaScript should be made compatible with libraries other than jQuery by
// wrapping it with an "anonymous closure". See:
// - http://drupal.org/node/1446420
// - http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth
(function ($, Drupal, window, document, undefined) {

	$(document).ready(function() {
	
		function initialize() {
			
      var mapOptions = {
        scrollwheel: false,
        center: new google.maps.LatLng(40.711353,22.816992),
			  zoom: 11,
			  minZoom:9,
			  maxZoom:18,			  
			  mapTypeId: google.maps.MapTypeId.ROADMAP,
	        };
	        
	        var map = new google.maps.Map(document.getElementById("map-canvas"),
	            mapOptions);
	            
	        var mapStyle = [
							  {
							    "stylers": [
							      { "saturation": -100 }
							    ]
							  }
							];
			
			map.setOptions({styles: mapStyle});
			
			// create marker
			var marker = new google.maps.Marker({
					position: new google.maps.LatLng(40.711353,22.816992),
					map:map,
					title:"ΓΑΡΙΔΕΣ",
					icon:{ url: "../www.shrimp.eu/sites/all/themes/shrimp/images/map-marker-shadow.png", anchor: new google.maps.Point(131, 65)}					
				});			    
      }
      google.maps.event.addDomListener(window, 'load', initialize);
	
  });

})(jQuery, Drupal, this, this.document);;
/*
	SUPERSCROLLORAMA - The jQuery plugin for doing scroll animations
	by John Polacek (@johnpolacek)

	Powered by the Greensock Tweening Platform
	http://www.greensock.com
	Greensock License info at http://www.greensock.com/licensing/

	Dual licensed under MIT and GPL.

	Thanks to Jan Paepke (@janpaepke) for making some nice improvements
*/

(function($) {

	$.superscrollorama = function(options) {

		var superscrollorama = this;
		var defaults = {
			isVertical:true,		// are we scrolling vertically or horizontally?
			triggerAtCenter: true,	// the animation triggers when the respective Element's origin is in the center of the scrollarea. This can be changed here to be at the edge (-> false)
			playoutAnimations: true,	// when scrolling past the animation should they be played out (true) or just be jumped to the respective last frame (false)? Does not affect animations where duration = 0
			reverse: true			// make reverse configurable so you don't have to pass it in for every tween to reverse globally
		};
		superscrollorama.settings = $.extend({}, defaults, options);
        var $window = $(window);

		// PRIVATE VARS

		var animObjects = [],
			pinnedObjects = [],
			scrollContainerOffset = {x: 0, y: 0},
			doUpdateOnNextTick = false,
			targetOffset,
			i;

		// PRIVATE FUNCTIONS

		function init() {
			// set event handlers
			$window.scroll(function() {
				doUpdateOnNextTick = true;
			});
			TweenLite.ticker.addEventListener("tick", tickHandler);
		}

		function cssNumericPosition ($elem) { // return 0 when value is auto
			var obj = {
				top: parseFloat($elem.css("top")),
				left: parseFloat($elem.css("left"))
			};
			if (isNaN(obj.top)) {
				obj.top = 0;
			}
			if (isNaN(obj.left)) {
				obj.left = 0;
			}
			return obj;
		}

		function tickHandler() {
			if (doUpdateOnNextTick) {
				checkScrollAnim();
				doUpdateOnNextTick = false;
			}
		}

		// reset a pin Object
		function resetPinObj (pinObj) {
			pinObj.el.css('position', pinObj.origPositioning.pos);
			pinObj.el.css('top', pinObj.origPositioning.top);
			pinObj.el.css('left', pinObj.origPositioning.left);
		}
		// set a Tween Progress (use totalProgress for TweenMax and TimelineMax to include repeats)
		function setTweenProgress(tween, progress) {
			if (tween) {
				if (tween.totalProgress) {
					tween.totalProgress(progress).pause();
				} else {
					tween.progress(progress).pause();
				}
			}
		}

		function checkScrollAnim() {
			var currScrollPoint = superscrollorama.settings.isVertical ? $window.scrollTop() + scrollContainerOffset.y :  $window.scrollLeft() + scrollContainerOffset.x;
			var offsetAdjust = superscrollorama.settings.triggerAtCenter ? (superscrollorama.settings.isVertical ? -$window.height()/2 : -$window.width()/2) : 0;
			var i, startPoint, endPoint;

			// check all animObjects
			var numAnim = animObjects.length;
			for (i=0; i<numAnim; i++) {
				var animObj = animObjects[i],
					target = animObj.target,
					offset = animObj.offset;

				if (typeof(target) === 'string') {
                    targetOffset = $(target).offset();
					startPoint = superscrollorama.settings.isVertical ? targetOffset.top + scrollContainerOffset.y : targetOffset.left + scrollContainerOffset.x;
					offset += offsetAdjust;
				} else if (typeof(target) === 'number')	{
					startPoint = target;
				} else if ($.isFunction(target)) {
					startPoint = target.call(this);
				} else {
                    targetOffset = target.offset();
                    
                    startPoint = superscrollorama.settings.isVertical ? targetOffset.top + scrollContainerOffset.y : targetOffset.left + scrollContainerOffset.x;
					offset += offsetAdjust;
				}

				startPoint += offset;
				endPoint = startPoint + animObj.dur; // if the duration is 0 the animation should autoplay (forward going from BEFORE to AFTER and reverse going from AFTER to BEFORE)

				if ((currScrollPoint > startPoint && currScrollPoint < endPoint) && animObj.state !== 'TWEENING') {
					// if it should be TWEENING and isn't..
					animObj.state = 'TWEENING';
					animObj.start = startPoint;
					animObj.end = endPoint;
				}
				if (currScrollPoint < startPoint && animObj.state !== 'BEFORE' && animObj.reverse) {
					// if it should be at the BEFORE tween state and isn't..
					if (superscrollorama.settings.playoutAnimations || animObj.dur === 0) {
						animObj.tween.reverse();
					} else {
						setTweenProgress(animObj.tween, 0);
					}
					animObj.state = 'BEFORE';
				} else if (currScrollPoint > endPoint && animObj.state !== 'AFTER') {
					// if it should be at the AFTER tween state and isn't..
					if (superscrollorama.settings.playoutAnimations || animObj.dur === 0) {
						animObj.tween.play();
					} else {
						setTweenProgress(animObj.tween, 1);
					}
					animObj.state = 'AFTER';
				} else if (animObj.state === 'TWEENING') {
					// if it is TWEENING..
					var repeatIndefinitely = false;
					if (animObj.tween.repeat) {
						// does the tween even have the repeat option (TweenMax / TimelineMax)
						repeatIndefinitely = (animObj.tween.repeat() === -1);
					}

					if (repeatIndefinitely) { // if the animation loops indefinitely it will just play for the time of the duration
						var playheadPosition = animObj.tween.totalProgress(); // there is no "isPlaying" value so we need to save the playhead to determin wether the animation is running
						if (animObj.playeadLastPosition === null || playheadPosition === animObj.playeadLastPosition) {
							if (playheadPosition === 1) {
								if (animObj.tween.yoyo()) {
									// reverse Playback with infinitely looped tweens only works with yoyo true
									animObj.tween.reverse();
								} else {
									animObj.tween.totalProgress(0).play();
								}
							} else {
								animObj.tween.play();
							}
						}
						animObj.playeadLastPosition = playheadPosition;
					} else {
						setTweenProgress(animObj.tween, (currScrollPoint - animObj.start)/(animObj.end - animObj.start));
					}
				}
			}

			// check all pinned elements
			var numPinned = pinnedObjects.length;
			for (i=0; i<numPinned; i++) {
				var pinObj = pinnedObjects[i];
				var el = pinObj.el;

				// should object be pinned (or updated)?
				if (pinObj.state !== 'PINNED') {

					if (pinObj.state === 'UPDATE') {
						resetPinObj(pinObj); // revert to original Position so startPoint and endPoint will be calculated to the correct values
					}

					startPoint = superscrollorama.settings.isVertical ? pinObj.spacer.offset().top + scrollContainerOffset.y : pinObj.spacer.offset().left + scrollContainerOffset.x;
					startPoint += pinObj.offset;

					endPoint = startPoint + pinObj.dur;

					var jumpedPast = ((currScrollPoint > endPoint && pinObj.state === 'BEFORE') || (currScrollPoint < startPoint && pinObj.state === 'AFTER')); // if we jumped past a pinarea (i.e. when refreshing or using a function) we need to temporarily pin the element so it gets positioned to start or end respectively
					var inPinAra = (currScrollPoint > startPoint && currScrollPoint < endPoint);
					if (inPinAra || jumpedPast) {
						// set original position values for unpinning
						if (pinObj.pushFollowers && el.css('position') === "static") { // this can't be. If we want to pass following elements we need to at least allow relative positioning
							el.css('position', "relative");
						}
						// save original positioning
						pinObj.origPositioning = {
							pos: el.css('position'),
							top: pinObj.spacer.css('top'),
							left: pinObj.spacer.css('left')
						};
						// change to fixed position
						pinObj.fixedPositioning = {
							top: superscrollorama.settings.isVertical ? -pinObj.offset : pinObj.spacer.offset().top,
							left: superscrollorama.settings.isVertical ? pinObj.spacer.offset().left : -pinObj.offset
						};
						el.css('position','fixed');
						el.css('top', pinObj.fixedPositioning.top);
						el.css('left', pinObj.fixedPositioning.left);

						// save values
						pinObj.pinStart = startPoint;
						pinObj.pinEnd = endPoint;

						// If we want to push down following Items we need a spacer to do it, while and after our element is fixed.
						if (pinObj.pushFollowers) {
							if (superscrollorama.settings.isVertical) {
									pinObj.spacer.height(pinObj.dur + el.outerHeight());
							} else {
									pinObj.spacer.width(pinObj.dur + el.outerWidth());
							}
						} else {
							if (pinObj.origPositioning.pos === "absolute") { // no spacer
								pinObj.spacer.width(0);
								pinObj.spacer.height(0);
							} else { // spacer needs to reserve the elements space, while pinned
								if (superscrollorama.settings.isVertical) {
									pinObj.spacer.height(el.outerHeight());
								} else {
									pinObj.spacer.width(el.outerWidth());
								}
							}
						}


						if (pinObj.state === "UPDATE") {
							if (pinObj.anim) {
								setTweenProgress(pinObj.anim, 0); // reset the progress, otherwise the animation won't be updated to the new position
							}
						} else if (pinObj.onPin) {
							pinObj.onPin(pinObj.state === "AFTER");
						}

						// pin it!
						pinObj.state = 'PINNED';
					}
				}
				// If state changed to pinned (or already was) we need to position the element
				if (pinObj.state === 'PINNED') {
					// Check to see if object should be unpinned
					if (currScrollPoint < pinObj.pinStart || currScrollPoint > pinObj.pinEnd) {
						// unpin it
						var before = currScrollPoint < pinObj.pinStart;
						pinObj.state = before ? 'BEFORE' : 'AFTER';
						// set Animation to end or beginning
						setTweenProgress(pinObj.anim, before ? 0 : 1);

						var spacerSize = before ? 0 : pinObj.dur;

						if (superscrollorama.settings.isVertical) {
							pinObj.spacer.height(pinObj.pushFollowers ? spacerSize : 0);
						} else {
							pinObj.spacer.width(pinObj.pushFollowers ? spacerSize : 0);
						}

						// correct values if pin Object was moved (animated) during PIN (pinObj.el.css values will never be auto as they are set by the class)
						var deltay = pinObj.fixedPositioning.top - cssNumericPosition(pinObj.el).top;
						var deltax = pinObj.fixedPositioning.left - cssNumericPosition(pinObj.el).left;

						// first revert to start values
						resetPinObj(pinObj);

						// position element correctly
						if (!pinObj.pushFollowers || pinObj.origPositioning.pos === "absolute") {
							var pinOffset;

							if (pinObj.origPositioning.pos === "relative") { // position relative and pushFollowers = false
								pinOffset = superscrollorama.settings.isVertical ?
											parseFloat(pinObj.origPositioning.top) :
											parseFloat(pinObj.origPositioning.left);
								if (isNaN(pinOffset)) { // if Position was "auto" parseFloat will result in NaN
									pinOffset = 0;
								}
							} else {
								pinOffset = superscrollorama.settings.isVertical ?
											pinObj.spacer.position().top :
											pinObj.spacer.position().left;
							}

							var direction = superscrollorama.settings.isVertical ?
											"top" :
											"left";

							pinObj.el.css(direction, pinOffset + spacerSize);
						} // if position relative and pushFollowers is true the element remains untouched.

						// now correct values if they have been changed during pin
						if (deltay !== 0) {
							pinObj.el.css("top", cssNumericPosition(pinObj.el).top - deltay);
						}
						if (deltax !== 0) {
							pinObj.el.css("left", cssNumericPosition(pinObj.el).left - deltax);
						}
						if (pinObj.onUnpin) {
							pinObj.onUnpin(!before);
						}
					} else if (pinObj.anim) {
						// do animation
						setTweenProgress(pinObj.anim, (currScrollPoint - pinObj.pinStart)/(pinObj.pinEnd - pinObj.pinStart));
					}
				}
			}
		}

		// PUBLIC FUNCTIONS
		superscrollorama.addTween = function(target, tween, dur, offset, reverse) {

			tween.pause();

			animObjects.push({
				target:target,
				tween: tween,
				offset: offset || 0,
				dur: dur || 0,
				reverse: (typeof reverse !== "undefined") ? reverse : superscrollorama.settings.reverse, // determine if reverse animation has been disabled
				state:'BEFORE'
			});

			return superscrollorama;
		};

		superscrollorama.pin = function(el, dur, vars) {
			if (typeof(el) === 'string') {
				el = $(el);
			}
			var defaults = {
				offset: 0,
				pushFollowers: true		// if true following elements will be "pushed" down, if false the pinned element will just scroll past them
			};
			vars = $.extend({}, defaults, vars);
			if (vars.anim) {
				vars.anim.pause();
			}

			var spacer = $('<div class="superscrollorama-pin-spacer"></div>');
			spacer.css("position", "relative");
			spacer.css("top", el.css("top"));
			spacer.css("left", el.css("left"));
			el.before(spacer);

			pinnedObjects.push({
				el:el,
				state:'BEFORE',
				dur:dur,
				offset: vars.offset,
				anim:vars.anim,
				pushFollowers:vars.pushFollowers,
				spacer:spacer,
				onPin:vars.onPin,
				onUnpin:vars.onUnpin
			});
			return superscrollorama;
		};

		superscrollorama.updatePin = function (el, dur, vars) { // Update a Pinned object. dur and vars are optional to only change vars and keep dur just pass NULL for dur
			if (typeof(el) === 'string') {
				el = $(el);
			}
			if (vars.anim) {
				vars.anim.pause();
			}

			var numPinned = pinnedObjects.length;

			for (i=0; i<numPinned; i++) {
				var pinObj = pinnedObjects[i];
				if (el.get(0) === pinObj.el.get(0)) {

					if (dur) {
						pinObj.dur = dur;
					}
					if (vars.anim) {
						pinObj.anim = vars.anim;
					}
					if (vars.offset) {
						pinObj.offset = vars.offset;
					}
					if (typeof vars.pushFollowers !== "undefined") {
						pinObj.pushFollowers = vars.pushFollowers;
					}
					if (vars.onPin) {
						pinObj.onPin = vars.onPin;
					}
					if (vars.onUnpin) {
						pinObj.onUnpin = vars.onUnpin;
					}
					if ((dur || vars.anim || vars.offset) && pinObj.state === 'PINNED') { // this calls for an immediate update!
						pinObj.state = 'UPDATE';
						checkScrollAnim();
					}
				}
			}
			return superscrollorama;
		};

		superscrollorama.removeTween = function (target, tween, reset) {
			var count = animObjects.length;
			if (typeof reset === "undefined") {
				reset = true;
			}
			for (var index = 0; index < count; index++) {
				var value = animObjects[index];
				if (value.target === target &&
					(!tween || value.tween === tween)) { // tween is optional. if not set just remove element
					animObjects.splice(index,1);
					if (reset) {
						setTweenProgress(value.tween, 0);
					}
					count--;
					index--;
				}
			}
			return superscrollorama;
		};

		superscrollorama.removePin = function (el, reset) {
			if (typeof(el) === 'string') {
				el = $(el);
			}
			if (typeof reset === "undefined") {
				reset = true;
			}
			var count = pinnedObjects.length;
			for (var index = 0; index < count; index++) {
				var value = pinnedObjects[index];
				if (value.el.is(el)) {
					pinnedObjects.splice(index,1);
					if (reset) {
						value.spacer.remove();
						resetPinObj(value);
						if (value.anim) {
							setTweenProgress(value.anim, 0);
						}
					}
					count--;
					index--;
				}
			}
			return superscrollorama;
		};

		superscrollorama.setScrollContainerOffset = function (x, y) {
			scrollContainerOffset.x = x;
			scrollContainerOffset.y = y;
			return superscrollorama;
		};

		superscrollorama.triggerCheckAnim = function (immediately) { // if immedeately is true it will be updated right now, if false it will wait until next tweenmax tick. default is false
			if (immediately) {
				checkScrollAnim();
			} else {
				doUpdateOnNextTick = true;
			}
			return superscrollorama;
		};


		// INIT
		init();

		return superscrollorama;
	};

})(jQuery);
;
/**
 * @file
 * A JavaScript file for the theme.
 *
 * In order for this JavaScript to be loaded on pages, see the instructions in
 * the README.txt next to this file.
 */
// JavaScript should be made compatible with libraries other than jQuery by
// wrapping it with an "anonymous closure". See:
// - http://drupal.org/node/1446420
// - http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth
(function($, Drupal, window, document, undefined) {
	var pt, dt, vt, mt, section, controller, activeSlideId, responsiveHeightImageFirst, responsiveHeightImageSecond, responsiveHeightImageThird;
	/*
	 * Set Slide Dimensions
	 */

	function setSlidesHeight() {
		$('.fluid-slide:not(#simple-slide-69)').height(pt);
		$('.view-frontpage-slideshow').height((pt + 100));
		//FIRST slideshow
		//position elements of second slide, preparation for click of
		var rightPosition = "-" + (dt / 2) + "px";
		$('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .views-field-field-simple-slide-title, #views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .field-name-field-simple-slide-subtitle, #views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .views-field-nothing,#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .views-field-nothing-1').css('right', rightPosition);
		//set inner height
		$('#views_slideshow_cycle_teaser_section_frontpage_slideshow-panel_pane_1').css({
			'height': (pt + 100) //adding extra space 100px
		});
		//set bkg wrapper height		
		$('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_0 .views-slideshow-cycle-main-frame-row-bkg').css({
			'height': ((pt + 100) - 313) //adding extra space 100px
		});
		$('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .views-slideshow-cycle-main-frame-row-bkg').css({
			'height': ((pt + 100) - 316) //adding extra space 100px
		});
		//Second Slideshow
		//set inner height
		$('#views_slideshow_cycle_teaser_section_frontpage_slideshow-panel_pane_2').css({
			'height': pt
		});
		//Second Third
		//set inner height
		$('#views_slideshow_cycle_teaser_section_frontpage_slideshow-panel_pane_3').css({
			'height': (pt + 100) //adding extra space 100px
		});
		//Set Building containers height
		$('#building-53, .building-wrapper').height(pt - 135); //pane-title height
		//Separtor Images
		//first image				
		responsiveHeightImageFirst = ($('.panel-pane.pane-1 img').attr('height') * dt) / $('.panel-pane.pane-1 img').attr('width');
		//second image
		responsiveHeightImageSecond = ($('.panel-pane.pane-2 img').attr('height') * dt) / $('.panel-pane.pane-2 img').attr('width');
		//third image
		responsiveHeightImageThird = ($('.third-image-separator img').attr('height') * dt) / $('.third-image-separator img').attr('width');
	}
	
	
	//Set mobile Dimensions
	function setMobileSlidesHeight() {
		$('#simple-slide-58').height(pt);
		$('.view-frontpage-slideshow:not(".view-display-id-panel_pane_3")').height(840);
		
		//set bkg wrapper height		
		$('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_0 .views-slideshow-cycle-main-frame-row-bkg').css({
			'height': 572 //adding extra space 100px
		});
		$('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .views-slideshow-cycle-main-frame-row-bkg').css({
			'height': 560 //adding extra space 100px
		});		
	}
	/*
	 * Get Dimensions
	 */
	 
	 function viewportMobileInit() {
		pt = $(window).height();
		dt = $(window).width();
		vt = $(document).height();
		mt = $(document).width();
		setMobileSlidesHeight();
	}

	function viewportInit() {
		pt = $(window).height();
		dt = $(window).width();
		vt = $(document).height();
		mt = $(document).width();
		setSlidesHeight();
	}
	//animate separator images

	function animateSeparatorImages() {
		controller.addTween('.pane-1', TweenMax.to(
		$('.panel-pane.pane-1 img'), 1, {
			css: {
				bottom: "-" + (responsiveHeightImageFirst - 265) //height is variable to viewport width, minus parent box height
			},
			"ease": ":Power2.easeInOut"
		}), pt, // scroll duration of tween,
		- 200 //adjust the animation start point
		);
		controller.addTween('.pane-2', TweenMax.to(
		$('.panel-pane.pane-2 img'), 1, {
			css: {
				bottom: "-" + (responsiveHeightImageSecond - 265) //height is variable to viewport width, minus parent box height
			},
			"ease": "Power2.easeInOut"
		}), pt, // scroll duration of tween,
		- 200 //adjust the animation start point
		);
		controller.addTween('.third-image-separator', TweenMax.to(
		$('.third-image-separator img'), 1, {
			css: {
				bottom: "-" + (responsiveHeightImageThird - 265) //height is variable to viewport width, minus parent box height
			},
			"ease": "Power2.easeInOut"
		}), pt, // scroll duration of tween,
		- 200 //adjust the animation start point
		);
	}
	//Animates first slideshow

	function animateFirstSlideshow() {
		//animate watch
		TweenMax.to($('#pocket-watch-dial'), 60, {
			rotation: 360,
			"repeat": -1,
			"ease": "Linear.easeIn"
		});
		//animate wave
		TweenMax.from($('.view-frontpage-slideshow.view-display-id-panel_pane_1 .views-slideshow-cycle-main-frame-row-bkg'), 120, {
			css: {
				backgroundPosition: "-3000px 0px"
			},
			"repeat": -1,
			"ease": "Linear.easeIn"
		});
		//animate tyre
		TweenMax.to($('#truck-tyres-rear'), 0.5, {
			css: {
				top: "107px"
			},
			"repeat": -1,
			"ease": "Linear.easeIn"
		})
		TweenMax.to($('#truck-tyres-front'), 0.5, {
			css: {
				top: "106px"
			},
			"repeat": -1,
			"ease": "Linear.easeIn"
		});
		controller.addTween('.view-frontpage-slideshow.view-display-id-panel_pane_1', TweenMax.from(
		$('.view-display-id-panel_pane_1 #views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_0 .views-slideshow-cycle-main-frame-row-item-wrapper'), 1, {
			css: {
				bottom: "-" + (pt / 2)
			},
			"ease": "Linear.easeIn"
		}), 500, // scroll duration of tween,
		- 150 //adjust the animation start point
		);
	}
	//Animates Second slideshow

	function animateSecondSlideshow() {
		//image
		controller.addTween('.view-id-frontpage_slideshow.view-display-id-panel_pane_2', TweenMax.from(
		$('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_2_0 .views-field-nothing'), 0.4, {
			css: {
				bottom: "-" + (pt / 3)
			},
			ease: "Linear.easeIn"
		}), 300, // scroll duration of tween,
		0 //adjust the animation start point
		);
		//text
		controller.addTween('.view-id-frontpage_slideshow.view-display-id-panel_pane_2', TweenMax.from([$('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_2_0 .views-field-field-simple-slide-title'), $('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_2_0 .field-name-field-simple-slide-subtitle')], 1, {
			css: {
				bottom: "-" + (pt / 2)
			},
			"ease": "Linear.easeIn"
		}), 400, // scroll duration of tween,
		0 //adjust the animation start point
		);
	}
	//Animates Third slideshow

	function animateThirdSlideshow() {
		//add flags
		$('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_3_1').append("<div id='world-map-flag-wrapper'><div id='world-map-flag-wrapper-inner'><div id='flag-1'></div><div id='flag-2'></div><div id='flag-3'></div><div id='flag-4'></div><div id='flag-5'></div></div></div>");
		controller.addTween(
		$('.view-frontpage-slideshow.view-display-id-panel_pane_3'), TweenMax.from($('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_3_0'), 1, {
			css: {
				backgroundPosition: 'right -' + (pt / 2) + 'px'
			},
			immediateRender: true
		}), pt, // scroll duration of tween,
		- (pt / 2) //offset, we want to start man animation immediately
		);
	}
	//Animates Second Section

	function animateText() {
		var animateSubNav = new TimelineLite();
		animateSubNav.add(
		TweenMax.to($('#navigation'), 0.5, {
			css: {
				top: '0px'
			}
		})).add(
		TweenMax.from($('#simple-slide-54 .field-name-field-simple-slide-subtitle'), 1.5, {
			css: {
				opacity: '0',
				top: '32%'
			}
		}, '-=1'));
		//animate subtitle
		controller.addTween(
		$('#simple-slide-54 .field-name-field-simple-slide-title'), animateSubNav, 100, // scroll duration of tween,
		- 50 //offset
		);
/*
		var animateBkgTitle = new TimelineLite();
		animateBkgTitle		
			.add(
				TweenMax.from($('#simple-slide-54'), 1, {
					css: {
						backgroundPosition: 'right -'+ (pt / 2)+'px'
					}
				})
			);		
		*/
		controller.addTween(
		$('#simple-slide-58 .field-name-field-simple-slide-title'), TweenMax.from($('#simple-slide-54'), 1, {
			css: {
				backgroundPosition: 'right -' + (pt / 2) + 'px'
			},
			ease: Quad.easeInOut
		}), pt, //, // scroll duration of tween,
		- 100 //offset, we want to start man animation immediately
		);
	}

	function animateLogoSlide() {
		controller.addTween($('#simple-slide-54 .group_slide_group2'), TweenMax.to($('#simple-slide-54 .group_slide_group'), 3, {
			css: {
				top: pt - 200,
				left: '+=100'
			},
			ease: Quad.easeInOut
		}));
	}
	var buildingcomplete = false;

	function pinBuilding() {
		buildingImgHeight = 424; ///$('#building-53 #image-item-1 img').height();
		// create animation timeline for pinned element
		var BuildingPinAnimations = new TimelineMax({
			onComplete: function() {
				//buildingcomplete = true;
				activeOverlays();
				//console.log('onComplete '+buildingcomplete);	
			},
			onStart: function() {
				showBuildingAnalysis();
				//buildingcomplete = false;
				//console.log('onStart '+buildingcomplete);	
			},
			repeat: 0
		});
		BuildingPinAnimations.add(
		TweenMax.to($('#image-item-2'), 1, {
			css: {
				height: buildingImgHeight
			}
		})).add(
		TweenMax.to($('#image-item-3'), 1, {
			css: {
				width: '1090px'
			}
		})).add(
		TweenMax.to($('#image-item-4'), 1, {
			css: {
				height: buildingImgHeight
			}
		})); //.addCallback(showBuildingAnalysis, "myLabel");
/*
		.add(
		TweenMax.to($('#pseudo'), 1, {
			css: {
				width: '0px'
			}
		}), "-=1");
		*/
		var old_scroll_top = 0;
		controller.addTween($('#building-53'), BuildingPinAnimations, 0, +300, false);
/*,
			onPin: function() {	
				
				//$('#building-53 .building-header').css('visibility','hidden');
				//$('.overlay-plus').css('visibility','hidden');				
			},
			onUnpin: function() {	
							
				if(buildingcomplete){
					//$('#building-53 .building-header').css('visibility','visible');
					//$('.overlay-plus').css('visibility','visible');														
					//addPlusMarkers();
				}	
				
			}		
			*/
	}

	function activeOverlays() {
		$('.overlay-plus').css('visibility', 'visible');
		addPlusMarkers();
	}

	function showBuildingAnalysis() {
		//$('#building-53 .building-header').fadeIn('visibility', 'visible');		
	}
	var buttons = ["building-4", "building-0", "building-1", "building-2", "building-3"];
	var overlays = ["overlay-0", "overlay-1", "overlay-2", "overlay-3", "overlay-4"];
	var plusbuttons = ['overlay-0-plus', 'overlay-1-plus', 'overlay-2-plus', 'overlay-3-plus', 'overlay-4-plus'];
	var lines = ["building-line-0", "building-line-1", "building-line-2", "building-line-3", "building-line-4"];

	function addPlusMarkers() {
		for (i = 0; i < buttons.length; i++) {
			$('#' + buttons[i]).bind('mouseover', function() {
				buttonOver($(this))
			});
			$('#' + buttons[i]).bind('mouseout', function() {
				hideAllOverlays()
			});
			$('#' + overlays[i]).bind('mouseover', function() {
				overlayOver($(this))
			});
			$('#' + overlays[i]).bind('mouseout', function() {
				overlayOut($(this))
			});
			$('#' + overlays[i]).bind('click', function() {
				overlayClicked($(this))
			});
			$('#' + plusbuttons[i]).bind('mouseover', function() {
				plusButtonOver($(this))
			});
		}
	}

	function overlayClicked(overlay) {
		var overlayId = overlay.attr('id');
		var index = overlays.indexOf(overlayId);
		$('#' + buttons[index]).trigger('click');
	}

	function overlayOver(overlay) {
		var overlayId = overlay.attr('id');
		var index = overlays.indexOf(overlayId);
		$('#' + buttons[index]).find('.field-group-format').addClass('overlay-hover');
	}

	function overlayOut(overlay) {
		var overlayId = overlay.attr('id');
		var index = overlays.indexOf(overlayId);
		$('#' + buttons[index]).find('.field-group-format').removeClass('overlay-hover');
		hideAllOverlays();
	}

	function plusButtonOver(plusbutton) {
		var buttonId = plusbutton.attr('id');
		var index = plusbuttons.indexOf(buttonId);
		showOverlay(index);
		$('#' + overlays[index]).bind('mousemove', function(event) {
			checkOverlayLimits($(this), event)
		});
	}

	function checkOverlayLimits(overlay, event) {
		var overlayId = overlay.attr('id');
		var index = overlays.indexOf(overlayId);
		var overlayOffset = overlay.offset();
		var cursorX = event.pageX - overlayOffset.left - 142; //offset relative to center of overlay
		var cursorY = event.pageY - overlayOffset.top - 142; //offset relative to center of overlay
		//console.log(cursorX+'---'+cursorY);
		var distFromCenter = Math.sqrt(cursorX * cursorX + cursorY * cursorY)
		if (distFromCenter >= 142) {
			$('#' + overlays[index]).unbind('mousemove');
			hideAllOverlays();
		}
	}

	function buttonOver(button) {
		var buttonId = button.attr('id');
		var index = buttons.indexOf(buttonId);
		showOverlay(index);
	}

	function showOverlay(index) {
		hideAllOverlays();
		$('#' + plusbuttons[index]).hide();
		$('#' + lines[index]).show();
		$('#' + overlays[index]).show().find('img').stop().css({
			'left': '0px'
		}).animate({
			left: '-516px'
		}, {
			duration: 20000,
		});
	}

	function hideAllOverlays() {
		for (i = 0; i < overlays.length; i++) {
			$('#' + overlays[i]).hide();
			$('#' + plusbuttons[i]).show();
			$('#' + lines[i]).hide();
		}
	}

	function graphAnimation() {
		var graphAnimations = new TimelineLite();
		graphAnimations.add(
		TweenMax.from($('.white-lines .line-1'), 1.5, {
			css: {
				height: 0
			}
		})).add(
		TweenMax.from($('.white-lines .line-2'), 1.5, {
			css: {
				height: 0
			}
		}), "-=1.3").add(
		TweenMax.from($('.white-lines .line-3'), 1.5, {
			css: {
				height: 0
			}
		}), "-=1.3").add(
		TweenMax.from($('.white-lines .line-4'), 1.5, {
			css: {
				height: 0
			}
		}), "-=1.3").add(
		TweenMax.from($('.white-lines .line-5'), 1.5, {
			css: {
				height: 0
			}
		}), "-=1.3").add(
		TweenMax.from($('.blue-lines .line-1'), 1.5, {
			css: {
				height: 0
			}
		}), "-=1.9").add(
		TweenMax.from($('.blue-lines .line-2'), 1.5, {
			css: {
				height: 0
			}
		}), "-=1.3").add(
		TweenMax.from($('.blue-lines .line-3'), 1.5, {
			css: {
				height: 0
			}
		}), "-=1.3").add(
		TweenMax.from($('.blue-lines .line-4'), 1.5, {
			css: {
				height: 0
			}
		}), "-=1.3").add(
		TweenMax.from($('.blue-lines .line-5'), 1.5, {
			css: {
				height: 0
			}
		}), "-=1.3").add(
		TweenMax.from($('#import-white-line'), 1.5, {
			css: {
				width: 0
			}
		}), "-=1.0").add(
		TweenMax.from($('#import-blue-line'), 1.5, {
			css: {
				width: 0
			}
		}), "-=1");
		//controller.addTween(
		//$('#graphs-general-container h2'), graphAnimations, 300, //, // scroll duration of tween,
		//120 //offset, 
		//);
		/*var peopleAnimations = new TimelineLite();
		peopleAnimations.add(
		TweenMax.from($('.people-graph-container .graph-container'), 2.5, {
			css: {
				opacity: 1
			}
		}), "-=0.1").add(
		TweenMax.from($('.people-graph-container .active-people'), 1.5, {
			css: {
				height: 0
			}
		}), "-=1.1");
		controller.addTween(
		$('.people-graph-container'), peopleAnimations, 100, //, // scroll duration of tween,
		- 330 //offset, 
		);*/
	}
	/*
	 *  Animate Numbers
	 */
	var intervalId = -1;
	var num1End = 950000;
	var num2End = 150000;
	var num3End = 1100000;
	var curNum1 = 0;
	var curNum2 = 0;
	var curNum3 = 0;
	var step1 = 45247;
	var step2 = 5981;
	var step3 = 37893;

	function animateNumbers() {
		// clear any earlier leftover timer
		if (intervalId != -1) {
			return;
			clearInterval(intervalId);
		}
		curNum1 = 0, curNum2 = 0, curNum3 = 0;
		intervalId = setInterval(advanceNumbers1, 100);
	}

	function advanceNumbers1() {
		if (curNum1 < num1End) {
			curNum1 += step1;
			if (curNum1 > num1End) {
				// detecting end condition
				curNum1 = num1End;
				// moving onto the next number
				//clearInterval(intervalId);
				//intervalId = setInterval(advanceNumbers2, 100);
			}
			$('#provlepsi-1-number').html(numToString(curNum1));
		}
		if (curNum2 < num2End) {
			curNum2 += step2;
			if (curNum2 > num2End) {
				// detecting end condition
				curNum2 = num2End;
				// moving onto the next number
				//clearInterval(intervalId);
				//intervalId = setInterval(advanceNumbers3, 100);
			}
			$('#provlepsi-2-number').html(numToString(curNum2))
		}
		if (curNum3 < num3End) {
			curNum3 += step3;
			if (curNum3 > num3End) {
				// detecting end condition
				curNum3 = num3End;
				// clearing final interval
				//clearInterval(intervalId);
			}
			$('#total-provlepsi-number').html(numToString(curNum3))
		}
	}

	function advanceNumbers2() {
		if (curNum2 < num2End) {
			curNum2 += step2;
			if (curNum2 > num2End) {
				// detecting end condition
				curNum2 = num2End;
				// moving onto the next number
				clearInterval(intervalId);
				intervalId = setInterval(advanceNumbers3, 100);
			}
			$('#provlepsi-2-number').html(numToString(curNum2))
		}
	}

	function advanceNumbers3() {
		if (curNum3 < num3End) {
			curNum3 += step3;
			if (curNum3 > num3End) {
				// detecting end condition
				curNum3 = num3End;
				// clearing final interval
				clearInterval(intervalId);
			}
			$('#total-provlepsi-number').html(numToString(curNum3))
		}
	}

	function numToString(num) {
		var str = "€ ";
		// adding millions and millions dot
		if (num > 1000000) {
			str += Math.floor(num / 1000000) + ".";
			num = num - (Math.floor(num / 1000000) * 1000000);
		}
		// correcting leading zeroes for thousands
		if (num < 100000) {
			str += "0";
		}
		if (num < 10000) {
			str += "0";
		}
		// adding thousands and thousands dot
		if (num > 1000) {
			str += Math.floor(num / 1000) + ".";
			num = num - (Math.floor(num / 1000) * 1000);
		}
		// adding leading zeroes
		if (num < 100) {
			str += "0";
		}
		if (num < 10) {
			str += "0";
		}
		str += num;
		return str;
	}
	/*
	 * hide and show arrows
	 */

	function slideShowControlsVisiblity(index) {
		if ($('#views_slideshow_pager_field_item_bottom_frontpage_slideshow-panel_pane_' + index + '_0').hasClass('active')) {
			//hide previous arrow, show next		
			$('#views_slideshow_controls_text_previous_frontpage_slideshow-panel_pane_' + index).hide();
			$('#views_slideshow_controls_text_next_frontpage_slideshow-panel_pane_' + index).show();
			//Fadeout Learn more
			$('.views-slideshow.view-display-id-panel_pane_' + index + ' .view-header .slide-learn-more').fadeIn();
			//reset truck and text position on previous click
			if (index == 1) {
				var rightPosition = "-" + (dt / 2) + "px";
				$('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .views-field-field-simple-slide-title, #views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .field-name-field-simple-slide-subtitle, #views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .views-field-nothing,#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .views-field-nothing-1').css('right', rightPosition);
			}
		}
		if ($('#views_slideshow_pager_field_item_bottom_frontpage_slideshow-panel_pane_' + index + '_1').hasClass('active')) {
			//hide next arrow, show previous
			$('#views_slideshow_controls_text_next_frontpage_slideshow-panel_pane_' + index).hide();
			$('#views_slideshow_controls_text_previous_frontpage_slideshow-panel_pane_' + index).show();
			//FadeIn Learn more
			$('.views-slideshow.view-display-id-panel_pane_' + index + ' .view-header .slide-learn-more').hide();
			//animate truck and text
			if (index == 1) {
				var animateTruckSlide = new TimelineLite();
				animateTruckSlide.add(
				TweenMax.to([
				$('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .views-field-field-simple-slide-title'), $('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .field-name-field-simple-slide-subtitle')], 1, {
					css: {
						right: 0
					}
				})).add(
				TweenMax.to($('#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_1_1 .views-field-nothing'), 3, {
					css: {
						right: 0
					}
				}));
			}
		}
	}

	function animateNutrients() {
		controller.addTween(
		$('#threptikes-general-container'), TweenMax.from($('#garides-aktines'), 2, {
			css: {
				height: 0,
			}
		}), 200, //, // scroll duration of tween,
		+ 50 //offset, 
		);
	}
	
	//First Slide adjust background position of gradient
	function firstSlideGradientBkg(){	
		 var tid = setInterval(function() {
			if ($('#simple-slide-58 #slide-bulding-wrapper img').height() == 0) return;
			clearInterval(tid);
			// do your work
			var fluidimageHeight = $('#simple-slide-58 #slide-bulding-wrapper img').height();
			var bkgOffset = fluidimageHeight * 0.4357;
			$('#simple-slide-58 #slide-text-wrapper').css({'background-position': 'left ' + bkgOffset + 'px'});
		}, 100);
	}
	
	//Event handler and visibility for Tablet navigation
	function tabetNavigation(){
	
		var aTop = $('#simple-slide-58').height();
		$(window).scroll(function(){
			if($(this).scrollTop() >= (aTop - 10)){ //small offset ensure on next button click the navigation will be visible
			
				//on tablet, landscape normal menu
				/*
				if(dt >= 1024){					
					$('#navigation').css({top:'-1px', display: 'block'});						
				}else{
					$('#navigation').slideDown('fast');
				}
				*/				
				$('#navigation').slideDown('fast');
			}else{
				$('#navigation').slideUp('fast');
			/*
				if(dt >= 1024){
					$('#navigation').css({'top':'-55px', 'display': 'none'});
				}else{
					$('#navigation').slideUp('fast');
				}
			*/
			}    	   
	  });
	  /*
		console.log($(window).scrollTop());
		$('#simple-slide-54').waypoint(function(direction) {
		alert(direction);
			if(direction == 'down'){ $('#navigation').show('fast');}
			if(direction == 'up'){ $('#navigation').hide('fast');}
		 
		});
		*/
		$('#block-superfish-1 .block-title').on('click',(function(event){		
			$('#block-superfish-1 ul#superfish-1, #block-system-user-menu').slideToggle('fast');
			$('#block-superfish-1 .block-title').toggleClass('open');
    }));
		
			
			
	    
	    //Close Navigation on li a click
	    $('#block-superfish-1 ul#superfish-1 a.sf-depth-2, #block-superfish-1 ul#superfish-1 #menu-661-1 a, #block-system-user-menu ul a').click(function(event, buttonRel){
		    if(buttonRel != 'nextButton'){
			    $('#block-superfish-1 .block-title').trigger('click');
		    }	    
	    });
	    
	    //close children on menuparent click
	    $('#superfish-1 li a.sf-depth-1.menuparent').on('click',(function(event){
				event.preventDefault();				
				if($(this).next().hasClass('sf-hidden')){
					
					$(this).parent().addClass('sfHover');
					$(this).next().removeClass('sf-hidden');			
				}else if(!$(this).next().hasClass('sf-hidden')){
					
					$(this).next().addClass('sf-hidden');
			    $(this).parent().removeClass('sfHover');
				}	
				
		  }));	    
			
			//only create if not already placed			
			if($('.navigation-header-wrapper').length == 0){
				//wrap block title and add language selector
				$('#block-superfish-1 .block-title').wrap('<div class="navigation-header-wrapper"/>');		
				$('#block-block-1').clone(true).insertBefore('#block-superfish-1 .block-title');
				$('#block-superfish-1 .block-title').before('<div id="logo-homepage-link"></div>');
			}
			
			
			//tablet back to home
			$('#logo-homepage-link').on('click', function(e){						    
			    jQuery(window).scrollTo(0, 2800, {'axis':'y'})
			});
		
	}
			
	function initTabletAnimations() {
		//simple animations
		TweenMax.to($('#pocket-watch-dial'), 60, {
			rotation: 360,
			"repeat": -1,
			"ease": "Linear.easeIn"
		});
		/*
		//animate wave
		TweenMax.from($('.view-frontpage-slideshow.view-display-id-panel_pane_1 .views-slideshow-cycle-main-frame-row-bkg'), 120, {
			css: {
				backgroundPosition: "-3000px 0px"
			},
			"repeat": -1,
			"ease": "Linear.easeIn"
		});
		//animate tyre
		TweenMax.to($('#truck-tyres-rear'), 0.5, {
			css: {
				top: "107px"
			},
			"repeat": -1,
			"ease": "Linear.easeIn"
		})
		TweenMax.to($('#truck-tyres-front'), 0.5, {
			css: {
				top: "106px"
			},
			"repeat": -1,
			"ease": "Linear.easeIn"
		});
		*/
	}

	function initScrollAnimations() {
		//setup global superscrollorama constructor
		controller = $.superscrollorama();
		animateText();
		animateSeparatorImages();
		animateFirstSlideshow();
		animateSecondSlideshow();
		animateThirdSlideshow();
		pinBuilding();
		animateNutrients();
		graphAnimation();
		// Trigger Numbers animation on pseudo element
		// reset values to start
		$('#provlepsi-1-number').html('€ 0.000');
		$('#provlepsi-2-number').html('€ 0.000');
		$('#total-provlepsi-number').html('€ 0.000');
		//controller.addTween(
		//$('.panel-pane.pane-4 h2.title'), TweenMax.to($('.panel-pane.pane-4 h2.title'), 1, {
		//	onComplete: animateNumbers
		//}), 0, //, // scroll duration of tween,
		//- 250 //offset, 
		//);
	}
	
	// Create the Loaders	
	var imagesloader = new PxLoader();
	// add images to DOM
	imagesloader.addProgressListener(function(e) {
		//console.log(e.resource.tags);
		if (e.resource.tags.all[1] == 'bkg') {
			//get bkg image src
			bkgImage = e.resource.img.attributes[0]['nodeValue'];
			$(e.resource.tags.first).css('background-image', 'url(' + e.resource.img.src + ')');
		} else {
			//add whole img tag				
			$(e.resource.tags.first).append('<img width="' + e.resource.img.naturalWidth + '" height="' + e.resource.img.naturalHeight + '" src="' + e.resource.img.src + '">');
		}
		$('#progress').text(Math.round((e.completedCount / e.totalCount) * 100) + '%');
	});
	imagesloader.addCompletionListener(function() {
		var tid = setInterval(function() {
			if (document.readyState !== 'complete') return;
			clearInterval(tid);
			// do your work
			shrimpsInit();
		}, 100);
	});
	
	//Change the location of views-header, ie Learn More
	function viewHeaderLocationAlter(){
		//Slideshow
		$('.views-slideshow').each(function(){
			var viewHeader = $(this).find('.view-header');
			$(viewHeader).find('a').addClass('copied-views-header');			
			$('.views-slideshow-cycle-main-frame-row:first-child', $(this)).find('.field-name-field-simple-slide-subtitle').append(viewHeader.html());					
		});
		$('.copied-views-header').on('click', function(event){
			event.preventDefault();
			$(this).parents('.view-content').prev().find('a').trigger('click');
		});	
		
		//Nutrients
		var viewHeader = $('#threptikes-general-container').find('.view-header');
		$(viewHeader).find('a').addClass('copied-views-header');			
		$('#threptikes-general-container .description .subtitle').first().append(viewHeader.html());
		$('.copied-views-header').on('click', function(event){
			event.preventDefault();
			$(this).parents('.description').prev().prev().find('a').trigger('click');
		});	
		
		
	}
	
	//After preloader I am called
	function shrimpsInit(){
		//check if we are mobile
		
		if(Drupal.settings.shrimp.isTablet){
			
			viewportMobileInit(); //setup global dimensions
			scrollTo(0, 0);
			$('#progress-wrapper').fadeOut('600');
			tabetNavigation();
			//initScrollAnimations();
			//align elements
			alignElement();
			viewHeaderLocationAlter();
			firstSlideGradientBkg();
			
			//disable bulding popup image click
			$('.is-tablet .building-section .building-section-image a').click(function(e){
				e.preventDefault();
			});			

			
		}else{
			
			viewportInit(); //setup global dimensions
			scrollTo(0, 0);
			$('#progress-wrapper').fadeOut('600');
			initScrollAnimations();
			//align elements
			alignElement();

		}
	
		

	}
	
	//vertically center items on viewport
	function alignElement() {
		//intro slide
		$('#slide-text-wrapper').flexVerticalCenter('margin-top', 126);
	}
	$.fn.flexVerticalCenter = function(onAttribute, offset) {
		return this.each(function() {
			var $this = $(this); // store the object
			var elementoffset = offset || 0;
			var attribute = onAttribute || 'margin-top'; // the attribute to put the calculated value on
			// recalculate the distance to the top of the element to keep it centered
			var resizer = function() {
					// get parent height minus own height and devide by 2
					$this.css(
					attribute, ((($this.parent().height() - $this.height()) / 2) - elementoffset));
				};
			// Call once to set.
			resizer();
			// Call on resize. Opera debounces their resize by default. 
			$(window).resize(resizer);
			// Apply a load event to images within the element so it fires again after an image is loaded
			$this.find('img').load(resizer);
		});
	};
	$(document).ready(function() {
		var baseURL = '../../../Content/introduction/sites/all/themes/shrimp/images/';
		if ($('body').hasClass('front')) {
			// Add queue our x images. We define here since we want to take advantage of the Drupal object
			
			//Redefine preloader images is Tablet
			if(Drupal.settings.shrimp.isTablet){
			
				if (jQuery('body').hasClass('i18n-en')) {
					var f1 = imagesloader.addImage(baseURL + 'tablet/threptikes-en.jpg', ['#threptikes-general-container .image-container .bg-image', 'img']);
				}else{
					var f1 = imagesloader.addImage(baseURL + 'tablet/threptikes.jpg', ['#threptikes-general-container .image-container .bg-image', 'img']);
				}
							
				var a1 = imagesloader.addImage(baseURL + 'tablet/Camera_06teliki-2-skouri.png', ['#slide-bulding-wrapper', 'img']),
						b1 = imagesloader.addImage(baseURL + 'tablet/xeria.jpg', ['#simple-slide-54', 'bkg']),
						e1 = imagesloader.addImage(baseURL + 'tablet/garides.jpg', ['#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_3_0', 'bkg']);
				
			}else{
			
				if (jQuery('body').hasClass('i18n-en')) {
					var f1 = imagesloader.addImage(baseURL + 'threptikes-garida-en.jpg', ['#threptikes-general-container .image-container .bg-image', 'img']);
				}else{
					var f1 = imagesloader.addImage(baseURL + 'threptikes-garida.jpg', ['#threptikes-general-container .image-container .bg-image', 'img']);
				}
				
				//var f1 = imagesloader.addImage(baseURL + 'tablet/threptikes.jpg', ['#threptikes-general-container .image-container .bg-image', 'img']);				
				var a1 = imagesloader.addImage(baseURL + 'Camera_06teliki-1-new.png', ['#slide-bulding-wrapper', 'img']),
						b1 = imagesloader.addImage(baseURL + 'xeria-retake.jpg', ['#simple-slide-54', 'bkg']),
						e1 = imagesloader.addImage(baseURL + 'shrimps-bowls-retake.jpg', ['#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_3_0', 'bkg']);
				
			}
			
			//var a1 = imagesloader.addImage(baseURL + 'Camera_06teliki-1-new.png', ['#slide-bulding-wrapper', 'img']),
			//b1 = imagesloader.addImage(baseURL + 'xeria-retake.jpg', ['#simple-slide-54', 'bkg']),
				var		c1 = imagesloader.addImage(baseURL + 'separator/image-separator-first.jpg', ['.panel-pane.pane-1 .pane-content', 'img']),
					c2 = imagesloader.addImage(baseURL + 'separator/image-separator-second.jpg', ['.panel-pane.pane-2 .pane-content', 'img']),
					c3 = imagesloader.addImage(baseURL + 'separator/image-separator-third.jpg', ['.third-image-separator', 'img']),
					d1 = imagesloader.addImage(baseURL + 'shrimps-on-lettuce.jpg', ['#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_2_0 .views-field-nothing', 'bkg']),
					d1 = imagesloader.addImage(baseURL + 'shrimps-on-globe.jpg', ['#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_2_1 .views-field-nothing', 'bkg']),
					//
					e2 = imagesloader.addImage(baseURL + 'world-map-new.jpg', ['#views_slideshow_cycle_div_frontpage_slideshow-panel_pane_3_1', 'bkg']),
					
					g1 = imagesloader.addImage(baseURL + 'investment-shadow.jpg', ['.pane-investment-pane-panel-pane-1 .views-row h3', 'bkg']),
					g2 = imagesloader.addImage(baseURL + 'investment-icons-noshadow.png', ['.pane-investment-pane-panel-pane-1 .views-row h3 a', 'bkg']),
					h1 = imagesloader.addImage(baseURL + 'building/2-new.jpg', ['#image-item-1', 'img']),
					h2 = imagesloader.addImage(baseURL + 'building/1-transparent.png', ['#image-item-2', 'img']),
					h3 = imagesloader.addImage(baseURL + 'building/3-new.jpg', ['#image-item-3', 'img']),
					h4 = imagesloader.addImage(baseURL + 'building/4-new.jpg', ['#image-item-4', 'img']),
					h5 = imagesloader.addImage(baseURL + 'building/line-1-newer.png', ['#building-line-0', 'bkg']),
					h6 = imagesloader.addImage(baseURL + 'building/line-2-new.png', ['#building-line-1', 'bkg']),
					h7 = imagesloader.addImage(baseURL + 'building/line-3-new.png', ['#building-line-2', 'bkg']),
					h8 = imagesloader.addImage(baseURL + 'building/line-4-newest.png', ['#building-line-3', 'bkg']),
					h9 = imagesloader.addImage(baseURL + 'building/line-5-new.png', ['#building-line-4', 'bkg']),
					//h10 = imagesloader.addImage(baseURL + 'building/xartis.jpg', ['#overlay-0', 'img']),
					h11 = imagesloader.addImage(baseURL + 'building/image-1.jpg', ['#overlay-1', 'img']),
					h12 = imagesloader.addImage(baseURL + 'building/image-2.jpg', ['#overlay-2', 'img']),
					h13 = imagesloader.addImage(baseURL + 'building/image-3.jpg', ['#overlay-3', 'img']),
					h14 = imagesloader.addImage(baseURL + 'building/image-4.jpg', ['#overlay-4', 'img']),
					h15 = imagesloader.addImage(baseURL + 'building/overlay-0.png', ['#overlay-0-bkg', 'bkg']),
					h16 = imagesloader.addImage(baseURL + 'building/overlay-1.png', ['#overlay-1-bkg', 'bkg']),
					h17 = imagesloader.addImage(baseURL + 'building/overlay-2.png', ['#overlay-2-bkg', 'bkg']),
					h18 = imagesloader.addImage(baseURL + 'building/overlay-3-newer.png', ['#overlay-3-bkg', 'bkg']),
					h19 = imagesloader.addImage(baseURL + 'building/overlay-4.png', ['#overlay-4-bkg', 'bkg']);
		
			if (jQuery('body').hasClass('i18n-en')) {
			
				var h10 = imagesloader.addImage(baseURL + 'building/xartis-en.jpg', ['#overlay-0', 'img']);
				//f1 = imagesloader.addImage(baseURL + 'threptikes-garida-en.jpg', ['#threptikes-general-container .image-container .bg-image', 'img']);
				
				
			} else {
			
				var h10 = imagesloader.addImage(baseURL + 'building/xartis.jpg', ['#overlay-0', 'img']);
				//f1 = imagesloader.addImage(baseURL + 'threptikes-garida.jpg', ['#threptikes-general-container .image-container .bg-image', 'img']);
				
				
			}
			
			
			
			imagesloader.start();
		}
		//reset slides to first slide on main-menu click
		$('#block-superfish-1 .menu a').click(function() {
			$('.views-slideshow-controls-text-previous').trigger('click');
		});
		//hiding unnessacery arrows
		//loop over slideshows		
		for (i = 1; i <= $('.views-slideshow').length; i++) {
			slideShowControlsVisiblity(i);
		}
		//Show or hide controls based on Slide number		
		$('.views-slideshow-controls-text-next, .views-slideshow-controls-text-previous, .views-slideshow-pager-fields .views-content-counter').click(function() {
			var currentId, currentElement;
			currentElement = $(this).closest('.views-slideshow-controls-text');
			if (currentElement.length) {
				//arrows was clicked
				currentId = $(this).closest('.views-slideshow-controls-text').attr('id');
			} else {
				//counter was clicked
				currentId = $(this).closest('.views-slideshow-pager-fields').attr('id');
			}
			var slideId = currentId.substr(currentId.length - 1);
			setTimeout(function() {
				slideShowControlsVisiblity(slideId);
			}, 250);
		});
		/*
		 * Trigger resize functions
		 */
		$(window).resize(function() {			
			if(Drupal.settings.shrimp.isTablet){
				viewportMobileInit();
				alignElement();	
				firstSlideGradientBkg();	
				//tabetNavigation();
					
			}else{
				viewportInit();
				alignElement();
				controller.triggerCheckAnim();
			}
		});
	});
})(jQuery, Drupal, this, this.document);;
/**
 * @file
 * A JavaScript file for the theme.
 *
 * In order for this JavaScript to be loaded on pages, see the instructions in
 * the README.txt next to this file.
 */

// JavaScript should be made compatible with libraries other than jQuery by
// wrapping it with an "anonymous closure". See:
// - http://drupal.org/node/1446420
// - http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth
(function ($, Drupal, window, document, undefined) {

	$(document).ready(function() {
	
	

	
	var firstEnterButton = '<div class="next-button" id="simple-slide-58-button">'+Drupal.t("ENTER")+'</div>';
	var nextButton = '<div class="next-button">'+Drupal.t("NEXT")+'</div>';
	//add next buttons
	//clone language switcher
	var langSwitcher = $('#block-block-1 .menu a').clone().addClass('simple-slide-58-language');
	$('#simple-slide-58').append(langSwitcher);
	$('#simple-slide-58').append(firstEnterButton);
	
	$('#simple-slide-58-button').click(function(){
		$('#menu-673-1 a').trigger('click', 'nextButton');
	});
	
	$('#simple-slide-54').append(nextButton);
	$('#simple-slide-54 .next-button').click(function(){
		$('#menu-674-1 a').trigger('click', 'nextButton');
	});
	
	$('.view-id-frontpage_slideshow.view-display-id-panel_pane_1').append(nextButton);
	$('.view-id-frontpage_slideshow.view-display-id-panel_pane_1 .next-button').click(function(){
		$('#menu-675-1 a').trigger('click', 'nextButton');
	});
	
	$('.view-id-frontpage_slideshow.view-display-id-panel_pane_2').append(nextButton);
	$('.view-id-frontpage_slideshow.view-display-id-panel_pane_2 .next-button').click(function(){
		$('#menu-676-1 a').trigger('click', 'nextButton');
	});
	
	$('.view-id-frontpage_slideshow.view-display-id-panel_pane_3').append(nextButton);
	$('.view-id-frontpage_slideshow.view-display-id-panel_pane_3 .next-button').click(function(){
		$('#menu-677-1 a').trigger('click', 'nextButton');
	});
	
	
	$('#threptikes-general-container .blue-fasa').append(nextButton);
	$('#threptikes-general-container .next-button').click(function(){
		$('#menu-671-1 a').trigger('click', 'nextButton');
	});	
	
	$('.pane-investment-pane-panel-pane-1').append(nextButton);
	$('.pane-investment-pane-panel-pane-1 .next-button').click(function(){
		$('#menu-672-1 a').trigger('click', 'nextButton');
	});
	
	$('#building-53').append(nextButton);
	$('#building-53 .next-button').click(function(){
	    $('#menu-661-1 a').trigger('click', 'nextButton');
	});
	
	/*$('.pane-custom.pane-5.pane-3').append(nextButton);
	$('.pane-custom.pane-5.pane-3 .next-button').click(function(){
		$('#menu-669-1 a').trigger('click', 'nextButton');
	});	*/
	
	//$('#simple-slide-69').append(nextButton);
	//$('#simple-slide-69 .next-button').click(function(){
	//	$('#menu-666-1 a').trigger('click', 'nextButton');
	//});
	
	//$('.pane-custom.pane-6.pane-4').append(nextButton);
	//$('.pane-custom.pane-6.pane-4 .next-button').click(function(){
	//	$('#menu-670-1 a').trigger('click', 'nextButton');
	//});
	
	//$('.node-financial-data').append(nextButton);
	//$('.node-financial-data .next-button').click(function(){
	//	$('#menu-661-1 a').trigger('click', 'nextButton');
	//});
	
		var pinBuildingOffset = 0;
		var buildingOffset = 0;

	
	  //ScrollTo Nav animation
	  //logo
	  $('#menu-664-1 .nolink').click(function(e){
				e.preventDefault();	    
		    jQuery(window).scrollTo(0, 2800, {
			    	'axis':'y',
			    	onAfter:function(){
			        var yPos = window.pageYOffset;
			        var $fixedElement = $('#navigation');
			        $fixedElement.css({ "position": "relative" });
			        window.scroll(0,yPos);
			        $fixedElement.css({ "position": "fixed" });
			      }
		    	})
		    });
	  
		//farming
		$('#menu-237-1 a').click(function(e){
			e.preventDefault();	    
	   });
	   
	   		//submenu
	   		$('#menu-673-1 a').click(function(e){
					e.preventDefault();
		    	jQuery(window).scrollTo('#simple-slide-54', 2800, {
			    	'axis':'y',
			    	onAfter:function(){
			        var yPos = window.pageYOffset;
			        var $fixedElement = $('#navigation');
			        $fixedElement.css({ "position": "relative" });
			        window.scroll(0,yPos);
			        $fixedElement.css({ "position": "fixed" });
			      }
		    	})
		    });
		    $('#menu-674-1 a').click(function(e){
					e.preventDefault();
		    	jQuery(window).scrollTo('.view-frontpage-slideshow.view-display-id-panel_pane_1', 2800, {
			    	'axis':'y',
			    	onAfter:function(){
			        var yPos = window.pageYOffset;
			        var $fixedElement = $('#navigation');
			        $fixedElement.css({ "position": "relative" });
			        window.scroll(0,yPos);
			        $fixedElement.css({ "position": "fixed" });
			      }
		    	})
		    });
		    $('#menu-675-1 a').click(function(e){
					e.preventDefault();
		    	jQuery(window).scrollTo('.view-frontpage-slideshow.view-display-id-panel_pane_2', 2800, {
			    	'axis':'y',
			    	onAfter:function(){
			        var yPos = window.pageYOffset;
			        var $fixedElement = $('#navigation');
			        $fixedElement.css({ "position": "relative" });
			        window.scroll(0,yPos);
			        $fixedElement.css({ "position": "fixed" });
			      }
		    	})
		    });
		    $('#menu-676-1 a').click(function(e){
				e.preventDefault();
		    	jQuery(window).scrollTo('.view-frontpage-slideshow.view-display-id-panel_pane_3', 2800, {
			    	'axis':'y',
			    	onAfter:function(){
			        var yPos = window.pageYOffset;
			        var $fixedElement = $('#navigation');
			        $fixedElement.css({ "position": "relative" });
			        window.scroll(0,yPos);
			        $fixedElement.css({ "position": "fixed" });
			      }
		    	})
		    });	   
		
		//investment		
		$('#menu-659-1 a').click(function(e){
			e.preventDefault();
		});
				
			//submenu
			$('#menu-677-1 a').click(function(e){
				e.preventDefault();
		        jQuery(window).scrollTo('#threptikes-general-container', 2800, {
			    	'axis':'y',
			    	onAfter:function(){
			        var yPos = window.pageYOffset;
			        var $fixedElement = $('#navigation');
			        $fixedElement.css({ "position": "relative" });
			        window.scroll(0,yPos);
			        $fixedElement.css({ "position": "fixed" });
			      }
		    	})
		    });
		  $('#menu-671-1 a').click(function(e){
				e.preventDefault();
		        jQuery(window).scrollTo('.pane-investment-pane-panel-pane-1', 2800, {
			    	'axis':'y',
			    	onAfter:function(){
			        var yPos = window.pageYOffset;
			        var $fixedElement = $('#navigation');
			        $fixedElement.css({ "position": "relative" });
			        window.scroll(0,yPos);
			        $fixedElement.css({ "position": "fixed" });
			      }
		    	})
		    });
		  $('#menu-672-1 a').click(function(e){
				e.preventDefault();				
		    jQuery(window).scrollTo('#building-53', 2800, {
			    	'axis':'y',
			    	onAfter:function(){
			        var yPos = window.pageYOffset;
			        var $fixedElement = $('#navigation');
			        $fixedElement.css({ "position": "relative" });
			        window.scroll(0,yPos);
			        $fixedElement.css({ "position": "fixed" });
			      }
		    	})
		    });		
		//prospect investment
		$('#menu-660-1 a.menuparent').click(function(e){
			e.preventDefault();	    
		});
		
			//submenu			
			//$('#menu-665-1 a').click(function(e){
			//	e.preventDefault();				
		    //jQuery(window).scrollTo('.pane-3', 2800, {
			//    	'axis':'y',
			//    	onAfter:function(){
			//        var yPos = window.pageYOffset;
			//        var $fixedElement = $('#navigation');
			//        $fixedElement.css({ "position": "relative" });
			//        window.scroll(0,yPos);
			//        $fixedElement.css({ "position": "fixed" });
			//      }
		    //	})
		    //});		
					
			//$('#menu-669-1 a').click(function(e){
			//	e.preventDefault();			
			//	jQuery(window).scrollTo('#simple-slide-69', 2800, {
			//    	'axis':'y',
			//    	onAfter:function(){
			//        var yPos = window.pageYOffset;
			//        var $fixedElement = $('#navigation');
			//        $fixedElement.css({ "position": "relative" });
			//        window.scroll(0,yPos);
			//        $fixedElement.css({ "position": "fixed" });
			//      }
		    //	})
		    //});		
					
			//$('#menu-666-1 a').click(function(e){
			//	e.preventDefault();				
		    //jQuery(window).scrollTo('.pane-4', 2800, {
			//    	'axis':'y',
			//    	onAfter:function(){
			//        var yPos = window.pageYOffset;
			//        var $fixedElement = $('#navigation');
			//        $fixedElement.css({ "position": "relative" });
			//        window.scroll(0,yPos);
			//        $fixedElement.css({ "position": "fixed" });
			//      }
		    //	})
		    //});		
					
			//$('#menu-670-1 a').click(function(e){
			//	e.preventDefault();			
			//	jQuery(window).scrollTo('.node-financial-data', 2800, {
			//    	'axis':'y',
			//    	onAfter:function(){
			//        var yPos = window.pageYOffset;
			//        var $fixedElement = $('#navigation');
			//        $fixedElement.css({ "position": "relative" });
			//        window.scroll(0,yPos);
			//        $fixedElement.css({ "position": "fixed"});
			//      }
		    //	})
		    //});		
					
		
		//contact
		$('#menu-661-1 a').click(function(e){
			e.preventDefault();			
			jQuery(window).scrollTo('#footer', 2800, {
			    	'axis':'y',
			    	onAfter:function(){
			        var yPos = window.pageYOffset;
			        var $fixedElement = $('#navigation');
			        $fixedElement.css({ "position": "relative" });
			        window.scroll(0,yPos);
			        $fixedElement.css({ "position": "fixed"});
			      }
		    	})
		    });		
					
	
	
	
	
	
		
	
	//touchscreen https://drupal.org/node/974482
	
	});

})(jQuery, Drupal, this, this.document);
;
/**
 * @file
 * A JavaScript file for the theme.
 *
 * In order for this JavaScript to be loaded on pages, see the instructions in
 * the README.txt next to this file.
 */

// JavaScript should be made compatible with libraries other than jQuery by
// wrapping it with an "anonymous closure". See:
// - http://drupal.org/node/1446420
// - http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth



(function ($, Drupal, window, document, undefined) {

	$(document).ready(function() {});	

})(jQuery, Drupal, this, this.document);
;
/**
 * Copyright (c) 2007-2013 Ariel Flesler - aflesler<a>gmail<d>com | http://flesler.blogspot.com
 * Dual licensed under MIT and GPL.
 * @author Ariel Flesler
 * @version 1.4.6
 */
;(function($){var h=$.scrollTo=function(a,b,c){$(window).scrollTo(a,b,c)};h.defaults={axis:'xy',duration:parseFloat($.fn.jquery)>=1.3?0:1,limit:true};h.window=function(a){return $(window)._scrollable()};$.fn._scrollable=function(){return this.map(function(){var a=this,isWin=!a.nodeName||$.inArray(a.nodeName.toLowerCase(),['iframe','#document','html','body'])!=-1;if(!isWin)return a;var b=(a.contentWindow||a).document||a.ownerDocument||a;return/webkit/i.test(navigator.userAgent)||b.compatMode=='BackCompat'?b.body:b.documentElement})};$.fn.scrollTo=function(e,f,g){if(typeof f=='object'){g=f;f=0}if(typeof g=='function')g={onAfter:g};if(e=='max')e=9e9;g=$.extend({},h.defaults,g);f=f||g.duration;g.queue=g.queue&&g.axis.length>1;if(g.queue)f/=2;g.offset=both(g.offset);g.over=both(g.over);return this._scrollable().each(function(){if(e==null)return;var d=this,$elem=$(d),targ=e,toff,attr={},win=$elem.is('html,body');switch(typeof targ){case'number':case'string':if(/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(targ)){targ=both(targ);break}targ=$(targ,this);if(!targ.length)return;case'object':if(targ.is||targ.style)toff=(targ=$(targ)).offset()}$.each(g.axis.split(''),function(i,a){var b=a=='x'?'Left':'Top',pos=b.toLowerCase(),key='scroll'+b,old=d[key],max=h.max(d,a);if(toff){attr[key]=toff[pos]+(win?0:old-$elem.offset()[pos]);if(g.margin){attr[key]-=parseInt(targ.css('margin'+b))||0;attr[key]-=parseInt(targ.css('border'+b+'Width'))||0}attr[key]+=g.offset[pos]||0;if(g.over[pos])attr[key]+=targ[a=='x'?'width':'height']()*g.over[pos]}else{var c=targ[pos];attr[key]=c.slice&&c.slice(-1)=='%'?parseFloat(c)/100*max:c}if(g.limit&&/^\d+$/.test(attr[key]))attr[key]=attr[key]<=0?0:Math.min(attr[key],max);if(!i&&g.queue){if(old!=attr[key])animate(g.onAfterFirst);delete attr[key]}});animate(g.onAfter);function animate(a){$elem.animate(attr,f,g.easing,a&&function(){a.call(this,targ,g)})}}).end()};h.max=function(a,b){var c=b=='x'?'Width':'Height',scroll='scroll'+c;if(!$(a).is('html,body'))return a[scroll]-$(a)[c.toLowerCase()]();var d='client'+c,html=a.ownerDocument.documentElement,body=a.ownerDocument.body;return Math.max(html[scroll],body[scroll])-Math.min(html[d],body[d])};function both(a){return typeof a=='object'?a:{top:a,left:a}}})(jQuery);
;
